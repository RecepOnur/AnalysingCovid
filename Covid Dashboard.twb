<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CovidDashboard_17279138959270' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Data 4)' inline='true' name='federated.0z4nsb8166ri5a1d3cx7s032bg7i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Data 4' name='excel-direct.078nex61abp4xt1b6bnun1ch0f4g'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Recep Onur Okan/Documents/Data Analyst Bootcamp/MSSQL Project/Tableau Vis Datas/Tableau Data 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.078nex61abp4xt1b6bnun1ch0f4g' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='MaxInfectionCount' ordinal='3' />
            <column datatype='real' name='infection_percentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.078nex61abp4xt1b6bnun1ch0f4g' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='MaxInfectionCount' ordinal='3' />
            <column datatype='real' name='infection_percentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E36A4916C6DD4B1FAEA6841A4C401FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E36A4916C6DD4B1FAEA6841A4C401FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E36A4916C6DD4B1FAEA6841A4C401FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MaxInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MaxInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>MaxInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E36A4916C6DD4B1FAEA6841A4C401FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infection_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infection_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>infection_percentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E36A4916C6DD4B1FAEA6841A4C401FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E36A4916C6DD4B1FAEA6841A4C401FC2]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/RECEPO~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0ptelm21nbzw6v11bu1i00u86sqt.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/02/2024 09:58:07 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8633</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MaxInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[MaxInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MaxInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54167</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>infection_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[infection_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>infection_percentage</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62413</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Low-income countries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High-income countries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Low-income countries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High-income countries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_E36A4916C6DD4B1FAEA6841A4C401FC2'>
            <properties context=''>
              <relation connection='excel-direct.078nex61abp4xt1b6bnun1ch0f4g' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='MaxInfectionCount' ordinal='3' />
                  <column datatype='real' name='infection_percentage' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Data 3)' inline='true' name='federated.1jchefo10ljpic10is2uf1oasoj3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Data 3' name='excel-direct.1r9i2de10ed8b51apzq6c1v5vj6u'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Recep Onur Okan/Documents/Data Analyst Bootcamp/MSSQL Project/Tableau Vis Datas/Tableau Data 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1r9i2de10ed8b51apzq6c1v5vj6u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='MaxInfectionCount' ordinal='2' />
            <column datatype='real' name='infection_percentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1r9i2de10ed8b51apzq6c1v5vj6u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='MaxInfectionCount' ordinal='2' />
            <column datatype='real' name='infection_percentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_530F962C830E4EEDA1FAC56FDBBA93BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_530F962C830E4EEDA1FAC56FDBBA93BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MaxInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MaxInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>MaxInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_530F962C830E4EEDA1FAC56FDBBA93BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infection_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infection_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>infection_percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_530F962C830E4EEDA1FAC56FDBBA93BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_530F962C830E4EEDA1FAC56FDBBA93BB]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/RECEPO~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0e499ir120i4n5151jvcb0kxyf8d.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/02/2024 09:25:39 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MaxInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[MaxInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MaxInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>infection_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[infection_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>infection_percentage</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_530F962C830E4EEDA1FAC56FDBBA93BB'>
            <properties context=''>
              <relation connection='excel-direct.1r9i2de10ed8b51apzq6c1v5vj6u' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='MaxInfectionCount' ordinal='2' />
                  <column datatype='real' name='infection_percentage' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Data 2)' inline='true' name='federated.1wd7mut00q1bdt0zqh4u907w66h0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Data 2' name='excel-direct.1fg7awv113newn1h06mru1okr1ei'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Recep Onur Okan/Documents/Data Analyst Bootcamp/MSSQL Project/Tableau Vis Datas/Tableau Data 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1fg7awv113newn1h06mru1okr1ei' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1fg7awv113newn1h06mru1okr1ei' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A19BDCD64612484988A6FC318E304A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A19BDCD64612484988A6FC318E304A33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A19BDCD64612484988A6FC318E304A33]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/RECEPO~1/AppData/Local/Temp/TableauTemp/#TableauTemp_099paes0boe9ch1grfu280uiskr9.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/02/2024 09:25:10 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A19BDCD64612484988A6FC318E304A33'>
            <properties context=''>
              <relation connection='excel-direct.1fg7awv113newn1h06mru1okr1ei' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Data 1)' inline='true' name='federated.1ygf50r0q07vn110reg6a06syrpj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Data 1' name='excel-direct.1m2caiq0r4g41610qr2ml1j5gkv0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Recep Onur Okan/Documents/Data Analyst Bootcamp/MSSQL Project/Tableau Vis Datas/Tableau Data 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1m2caiq0r4g41610qr2ml1j5gkv0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_perc' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1m2caiq0r4g41610qr2ml1j5gkv0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_perc' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C5872DEA3EDB4BB3A1F3712E39DE6CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C5872DEA3EDB4BB3A1F3712E39DE6CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_perc]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>death_perc</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C5872DEA3EDB4BB3A1F3712E39DE6CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:death_perc:qk]&quot;' value='Death Percentage' />
          <alias key='&quot;[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:total_cases:qk]&quot;' value='Total Cases' />
          <alias key='&quot;[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:total_deaths:qk]&quot;' value='Total Deaths' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C5872DEA3EDB4BB3A1F3712E39DE6CB1]' role='measure' type='quantitative' />
      <column datatype='real' name='[death_perc]' role='measure' type='quantitative' />
      <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column-instance column='[death_perc]' derivation='Sum' name='[sum:death_perc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/RECEPO~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0z6bdnw009djhn18mcl4v0oq20zr.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/02/2024 09:58:43 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C5872DEA3EDB4BB3A1F3712E39DE6CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C5872DEA3EDB4BB3A1F3712E39DE6CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_perc</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death_perc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death_perc</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C5872DEA3EDB4BB3A1F3712E39DE6CB1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C5872DEA3EDB4BB3A1F3712E39DE6CB1'>
            <properties context=''>
              <relation connection='excel-direct.1m2caiq0r4g41610qr2ml1j5gkv0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='death_perc' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Data 1)' name='federated.1ygf50r0q07vn110reg6a06syrpj' />
          </datasources>
          <datasource-dependencies datasource='federated.1ygf50r0q07vn110reg6a06syrpj'>
            <column datatype='real' name='[death_perc]' role='measure' type='quantitative' />
            <column-instance column='[death_perc]' derivation='Sum' name='[sum:death_perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ygf50r0q07vn110reg6a06syrpj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:death_perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ygf50r0q07vn110reg6a06syrpj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:death_perc:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ygf50r0q07vn110reg6a06syrpj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ygf50r0q07vn110reg6a06syrpj].[:Measure Names]' value='250' />
            <format attr='height' value='90' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='9' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='normal' />
            <format attr='text-format' field='[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:death_perc:qk]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1ygf50r0q07vn110reg6a06syrpj].[:Measure Names]' value='36' />
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='background-color' scope='cols' value='#dfe7e8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ygf50r0q07vn110reg6a06syrpj].[sum:death_perc:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ygf50r0q07vn110reg6a06syrpj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ygf50r0q07vn110reg6a06syrpj].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3AECF02F-C8CE-4CDD-9648-5FBE72DB3509}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death Count per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Data 2)' name='federated.1wd7mut00q1bdt0zqh4u907w66h0' />
          </datasources>
          <datasource-dependencies datasource='federated.1wd7mut00q1bdt0zqh4u907w66h0'>
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[sum:TotalDeathCount:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[sum:TotalDeathCount:qk]' field-type='quantitative' major-origin='0' major-spacing='1000000' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[none:location:nk]' value='123' />
            <format attr='text-format' field='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[sum:TotalDeathCount:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[sum:TotalDeathCount:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[sum:TotalDeathCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wd7mut00q1bdt0zqh4u907w66h0].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1wd7mut00q1bdt0zqh4u907w66h0].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{A0B0A1FE-018C-438B-9C61-A6224DD2A140}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Infection Percentage per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Data 3)' name='federated.1jchefo10ljpic10is2uf1oasoj3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jchefo10ljpic10is2uf1oasoj3'>
            <column datatype='real' name='[infection_percentage]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[infection_percentage]' derivation='Sum' name='[sum:infection_percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jchefo10ljpic10is2uf1oasoj3].[Longitude (generated)]' field-type='quantitative' max='16080152.345922545' min='-17404607.642002858' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jchefo10ljpic10is2uf1oasoj3].[Latitude (generated)]' field-type='quantitative' max='15467178.160607524' min='-4890034.4218281861' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jchefo10ljpic10is2uf1oasoj3].[sum:infection_percentage:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jchefo10ljpic10is2uf1oasoj3].[sum:infection_percentage:qk]' value='Infection Percentage'>
              <formatted-text>
                <run bold='true' fontsize='10'>Infection Percentage</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jchefo10ljpic10is2uf1oasoj3].[none:location:nk]' />
              <color column='[federated.1jchefo10ljpic10is2uf1oasoj3].[sum:infection_percentage:qk]' />
              <geometry column='[federated.1jchefo10ljpic10is2uf1oasoj3].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jchefo10ljpic10is2uf1oasoj3].[Latitude (generated)]</rows>
        <cols>[federated.1jchefo10ljpic10is2uf1oasoj3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EACE1193-B774-4830-BCBB-0BC676C6217B}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Infection of Population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Data 4)' name='federated.0z4nsb8166ri5a1d3cx7s032bg7i' />
          </datasources>
          <datasource-dependencies datasource='federated.0z4nsb8166ri5a1d3cx7s032bg7i'>
            <column-instance column='[infection_percentage]' derivation='Avg' name='[avg:infection_percentage:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[infection_percentage]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[tmn:date:qk]' scope='cols' value='Month ' />
            <format attr='title' class='0' field='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[avg:infection_percentage:qk]' scope='rows' value='Average Infection Percentage' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' value='normal' />
            <format attr='font-size' field='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' value='8' />
            <format attr='color' field='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' value='8' />
            <format attr='font-weight' field='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' value='normal' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' value='Country'>
              <formatted-text>
                <run bold='true'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' />
              <text column='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' />
              <text column='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[avg:infection_percentage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[avg:infection_percentage:qk]</rows>
        <cols>[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{7A98BEDC-99E1-4698-BFB7-5F9E91395B61}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='6' type-v2='layout-basic' w='99034' x='483' y='999'>
              <zone h='23970' id='3' name='Sheet 1' w='46409' x='483' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36829' id='5' name='Sheet 2' w='35968' x='483' y='24969'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37203' id='12' name='Sheet 4' w='83766' x='483' y='61798'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37203' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' type-v2='color' w='15268' x='84249' y='61798'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60799' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1jchefo10ljpic10is2uf1oasoj3].[sum:infection_percentage:qk]' type-v2='color' w='9595' x='89922' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36829' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[sum:TotalDeathCount:qk]' type-v2='color' w='10441' x='36451' y='24969'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60799' id='10' name='Sheet 3' w='43030' x='46892' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='16' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone fixed-size='184' h='23970' id='3' is-fixed='true' name='Sheet 1' w='46409' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60799' id='10' is-fixed='true' name='Sheet 3' w='43030' x='46892' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='60799' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1jchefo10ljpic10is2uf1oasoj3].[sum:infection_percentage:qk]' type-v2='color' w='9595' x='89922' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36829' id='5' is-fixed='true' name='Sheet 2' w='35968' x='483' y='24969'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='36829' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[sum:TotalDeathCount:qk]' type-v2='color' w='10441' x='36451' y='24969'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37203' id='12' is-fixed='true' name='Sheet 4' w='83766' x='483' y='61798'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='37203' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]' type-v2='color' w='15268' x='84249' y='61798'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D7E84EF5-C11E-41D2-94F3-5617F9DC488D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ygf50r0q07vn110reg6a06syrpj].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE7CC34F-00A8-46C4-B6EA-6D58670C3C0E}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wd7mut00q1bdt0zqh4u907w66h0].[sum:TotalDeathCount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wd7mut00q1bdt0zqh4u907w66h0].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A9C483C-622F-4B8A-AD89-180A8399FE2C}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jchefo10ljpic10is2uf1oasoj3].[sum:infection_percentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jchefo10ljpic10is2uf1oasoj3].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5BBE569-346F-4223-84E9-1E2D6E8511A7}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]</field>
            <field>[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AFA7C485-50F9-46B4-87BC-99726A34DC8D}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.0z4nsb8166ri5a1d3cx7s032bg7i].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{736A51B2-91AD-4699-87AE-95390C13F2AE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d3BdV37n+bnp5YSHnEGAAEkwgaJESVRqtTvYHex22+P22jW1ni3PVHk2
      1O7O/rs7vevd/3a21uuZqt2pcdnjdtvqbqvd3Wp1ktQUKVGixCCCIHLOeA/Ay/Gms388ECRI
      giIpiEG4n6pX74Zzz/3de8/3nvS750hCCIGDwy5FftgGODg8TBwBOOxqHAE47GocATjsahwB
      OOxqrgtACEYH+7lw4QIXLl5keS21JaAQgts3GNmMjY1vrs1MjGPYArBZX1u/KyPMcp7J2YX7
      sd/B4RNxXQCSxL6DR0nNzNB9/DiNNRGEENi2jRACPT3LG+8ObK5f+webifGpzWjOnv4ZZy8M
      AhYffHBxUzg3/mzbxr7h3yoXmJ5bvB7njfHfcMyNxzo47ATqdjuEsHjj5z8jWldPrizRHtGZ
      nVphuq2agGqwsLLO3PIqv/u1L2w5LtK4F311moLRA8Bc/7usBXo4WGdz9soyudg4HXv3cWXg
      KocPHWJseo7f+Y1nWZyd4oJmUJICtIYl5teLZJJrvPz5F/jhK/9ISXLx7LF9LKdM6mqiHD60
      3ym/OXxitk1DViEGvhaefPIEhVSc5pYW9nT10NXexPraKqYtWImt3PbY508e5933Ltx2n+oN
      cPRoH9FoFX19ffjdCgDN7V2ceOZ5smtL9F8dwufR8Eo28VQe2xXmT//kn9NQW4NkG8iKiuTk
      Ag47wLYCkD3VFFKLFPNpLMmF7A5SziUxDJOJ6QUOH+hB2uZYX1UTnvIqyYKBx++nkMuztDCP
      YW9vSLlcIrEyhysQpbmuhlBdG0eeOE5NyEttbS2SBChunjrxFLGpQXK6IwCHT450sytEam2N
      QE0NKlDOpxmbWWT//gNoCsQW59BlHzUBlanFNeprq6mpriKRSBGNVgGQSCSIRqOY5TxLazla
      m2qZGh8lWF2PS3VhWzrRaHQzXCKRIBIKsbgwS95U2NfVAdjMTI6BO0xHSx3JVI5oVRjbMhkf
      GyFU00xjbdWDv1sOnzluEYCDw27CqUc67GocATjsajabQYUQpHL5h2mLg8MDQVMVAl4vcFM/
      QDrvCMDhs4/P7d4UgFMEctjVPJICmLx6gVe+8x2+9w/fJ13QN7fHZkYYn41tCXv+1z9hcjld
      2T83zqvfe4XphdUHau8nIbE4xSvf+Vu+/8r3yF+/VFamh5mYj28J++GbrzG1nALL4PVXX+HV
      H7zKynpm27g/OHMaE3jt+99H3zbUDmEV+ad/+C4/fPVHrKe3L0m8985pbAE/+sH3sG9ofzz7
      q9f4/j+8wvRCfNtj78T4lfPEUoV7Pm5bV4iHSdehJxm6eI7Ok39IMTbBP715lro9B9DnPmR4
      1cUf/v4X+eD9D9CCDYTKMTxlE1vP8Z+/8yr/+t/8DyhWidd+8ArxZIGvfOVz/Pz1N9nT20eV
      lObS0DQv/ubXuXzqdUxvNd/85u/gUh/eeyDa3Ilc/BHHv/ivyCwM8oO33qNhzwGKMx8wmvLw
      e1/9HBcvXMBX044nHcNfNsE2uDI+z3/7L/+I//Cf/prf/8qznH7/I44+90WstXGGRqY49uzz
      /OMr3yMjeVmcGePHf//XNHY/yfr4JYqyn69/4xv4PTv4+K0SI7MJ/uxPnuav/uq7/NYL+3j/
      0ijPfuFrJCcvMjI5z8mXXubV730PXQ6wMDnKD7/zVzQfeZFn+7o5f+4yf/o//Rn//v/+Oz53
      Yi9D08t86Xf+gHd/9veYah1tUYnFpMGzzxzh1Fun6Tz8LLnZfgxVwRPtYuq9HyLVTfLyc918
      dP4yTfufwpOfZWIxRaShjShphmfjfPl3v0V3s3vT7EcyB7iR906d4nPf+BZz/e/T2tXN8Rde
      xi10SmWTgUsXsDbCWeUCii+M3+1CkyUy2SwrUyMsrWcpFotYAt5641dIVomz75+nXCphGiZ3
      6Jx+4Lx36k1e/t0/YvyjD+jo7ubJFz6PS5Qo6wb9ly7eEt5fVYOklzj15i8QkszZM++QWk9g
      FNNMLRfobG/nhRdOoLmDvPDCU0yMT6GXS+i6geDT6f4J1zVh5dO88cs3cMkmZ955n0RinVJ2
      jYWUTVtHOy88exzNF+Klk8cYn5iuHGjm+OErr9JzpI8333gDuZzmvfP9TE7M8PVvfJGLg7P8
      F3/8LfpP/5KScHH29Nusx5K89KWXmBidpGtvNy9++Uvo6SS6ZfHRxfO8d2GUb3z1eeam53jj
      16ehmOCDi4Nb7H1kBSArCpIkcfDIIX7x/b/DW99JQ0MjA2dPMTE1iSG58XvdlXBIaMEaDjR5
      +bu//Q79V4dZiacIR0LYtqC6JsrMxASHDh9G8VXRd7ALfzjK+uIcBd36eGM+7WuVr13rUX7+
      vf9MqGkPdfWNXD77FuMTk9iqF6/HtXFPKseUkjG++9d/w8FnnufI4aMISeXJ40eYnZ0nHIkg
      yzLRiJszpz9EURRAQpbAH4qQji+SLRo7fh2Z2Cx/+5/+huOf/wJHjx7CUv08dWwfszMLRCIR
      ZFki6lM58/5FZEUBSUaRK0lQ8YT5g3/xr/jm1z7HoUMH0SKNHN7XQU1TGyF/kNYaD6/8/fdp
      6+0Dy+TpZ5/ZTCOKItPQ1MiZX/yCqelpPKEIbs3Fs0/08NOfn8JWNA4f6MEdbeZgd+sWmzd7
      goUQzMbur/zl4PAocuHMr7gyMETXiS/x0lO9m9t9bjd1VRHAEYDDLuRGAWypBUmm+VAMcnB4
      kFjSdT/mLQKojToelg67i0e2Euzg8CBwBOCwq3EE4LCrcQTgsKtxBOCwq3EE4LCrcQTgsKtx
      BOCwq3lk3KFTqRTT09PMzs7y9NNPs7KywuzsLC+99BIXLlygqamJAwcOIEkSIyMjZLNZDMNA
      0zQ0TaOtrY3JycnN5erqagAWFhYYHx/n5MmTnD9/nmg0SkNDAxMTE5TLZU6ePLnhLPZoYVkW
      H3zwAX6/n8OHDyNJEv39/RSLRVpaWlhbW8OyLPx+P6VSiWKxSFtbGy0tLSSTSYaGhrAsi2PH
      jnHu3DkaGxvp7u7mwoULhMNhDh48iCRtN7LTo8va2hojIyN4vV6OHz+OEILz589TLpc5cuQI
      IyMj6LrOoUOHGB4exjAMjh8/zuDgILqu09fXRzAY3IzvkckBIpEIvb291NbW0tjYyIEDBzYG
      xJI4ePAg4XAYSZKQJIkDBw6gqiq9vb0Eg0G6u7uRZXnLMkA2myUej+PxeLh69SqdnZ1UVVUR
      iUTo6upCVdVtBvx9+MzNzREMBmloaMC2K07b6+vr9Pb2cvXqVZLJJF1dXayvr5NIJDh48CBX
      r14FoFQqEQwGsW2bYrFIb28vkUiE8fFxGhoaqKmp2YzzcWN0dJSTJ09SLBYRQmBZFrZtc+LE
      CQYHK67OTz31FAMDA1iWRWdnJxcvXkSWZY4fP874+PiW+B4ZAQBcvnyZo0ePbi739fXh8/mo
      r69naWmJXC6HZVkUCgXK5TJVVVXs2bMHj8fDwMDAlmXTNInFYgghmJqa2nCbVZifn2d6eprh
      4WGeeeYZVPWRyQS34PF4cLlcZLNZFhYWsCyLEydOsLS0RCRSceQKh8MYhsFTTz3F4uIiVVVV
      mKZJPB6nqamJqqoqLMuioaGB5eVlbNtGVVXi8TiJROIhX+H94XK5Kt93WNbmYMuGYVAoFPB4
      PBiGQT6fJxKJsG/fPuLxOLW1tei6Tj6fx+12b4lvizdosVh8KBd17fxzc3O0t7dvWc7lcoyP
      j+Pz+WhpaSGVSqFpGoFAAJ/Px/j4ONlslp6eHpaXl8lkMuzbt4/l5WX27t2LJEksLS3R2NjI
      4OAgiqIQCASIx+OoqsqhQ4ceySKQEIKxsTHK5TI9PT3EYjEkSSKRSHDgwAHi8Tirq6ub9yiZ
      TNLb28vc3BxtbW0MDg7icrlob2/fvH89PT0MDw8jhKC3t/exLAKZpsmVK1doaGhgaWmJzs5O
      crkciUSCI0eOsLCwQCKR4PDhw4yNjWHb9uZ9SaVSHD58GFmW8fl8wCMkAAeHe6VQKGwm5Hvl
      2nGPVBHIweFeuN/EfyOOABx2NY4AHHY1jgAcdjWOABx2NY4AHHY1jgAcdjVbukELhXsfW9HB
      4XFDkqRbO8IcHHYjThHIYVfjCMBhV+MIwGFX4wjAYVfjCMBhV/Nofg3i8Jkgm1zlx6/9gmc/
      9wWaakKomouBK1c4dPgI5XIJv0vnvctzLE2OEKlv5gsvP0ehWMbncZEvlHDZOQYXS+TW5zn+
      xBPomRgfja9w6NAhAm4Zt9eHbVkIBMKysQRMjQ7Tvr+XoMf98QZykwCS8QXG52KEI1H2dnag
      yNt/MCGEwDRNNE1jZnSI2q5e/FtiEyRXV5heiLO3Zx8hv+eub5yh66guF/f3uYZgdXmBhXiS
      nn378Xtc24a0TANkFUWWmJuZoaW9gztc8i3ouo7LtX38u51gVS011dXU+3XefPciqlVkZXmR
      lsZa3vjl67Ts6yNftPBH6gjbOX7y89eJzUzz1Etf5qPTP6PnyHEmVm3CrHPq9Z9Qdof4rd/+
      KoXZAd6ZzYOeRkg+LD1NMZPDkjU0s0Coqe2uBbClCDRx5Rz13U8Q9Qp++et3AdDLRfKFElBJ
      MJlMBtOyKWaT/PQXvyKXL7A8P0OuVCaXL2xOvJNcmuLS2DJHDvciLBNh22SzWUzLRtgWhmGC
      EOiGgWno6HrleNu2+NlrPyGRrpwHKgmtkM+hG5Xh201DJ5vLb3wOp2NZJqVyZRq4xYmrjK/k
      Odzbg2Wa2JZFNpvFsgW2ZaLrOtlsFlsIBt59k6uzcUq6gcfrAQS6rpPLZjHMyswxpWKBYqmM
      uMGOsm6gl4v85LWfbNjxSZLJZxtN01A0N8Is4faHaKiJsDQ9Re2eboRhoKkqaytzrBoaTZEA
      h558jnxsju793bhCNXgx8AXDNNfX0NPTwdkz75EsGJilAh5fkEximZIpCEdriUZCtLc1Uyje
      /ZSAtykCSdQ2d2JcuEohsciZj6aoduv4Ww4TlnLkSjrj0ws8e7SbdCpFIplBWAbj4xOYK+N0
      PPUlOmp8XPlokONf+jqqKhEOqpz59a+obmxjbm6Rk0918v6VDL/5Yg9vvnWOKiWDHe3GiE/S
      2vccmUyGeDyO1+NDVWRe++EPONh3nLHRMT7/hZd59533aa6PkBNBiitjxDMFeo6c4IneLgaH
      p3nxK19HVSRCqs2bv/w5ze17mFuM82R3Nb+8HKOvI0C8FEDJpjHW4uSrfFy6cIkvfvU3+O7f
      fpeTL5xkfGqeE72tDC3mkHIxup58mXd++grHnn6OoZEJPv/CCTKZDOuJNAG/fweTzGeL3/jS
      FwH47a80bB/opWe23fX00YNb1g8fqPx3994m8H2wTR1AIEkwPXQZS6kDl0p6PU6utI7k9hOP
      rxKpPklDYyNtLQ0sjmgc6D1I0ZVhPVeCGh+KImFaAjQJhE5OV3ix9wCl1VnW8lvn5ZJVjZ4D
      B8lrWdIm1NfXs7d7L9rGfm8wwv79+5Gyq4yMD7GW0qmtlSnkkpiGwee/+k3qgpUsT5K5Pv2m
      mUWXwhw40EtsfoaiGaWjq4fengAzp0fprGtA3dNFdeT6l0V1TW3s27efyYlJBoZG8EabUX0e
      VlcThKvr2b9vH1MTk4SjtdTX19PR1rQzT+IzSjabJpvPbOaS1x7N9VxzY7o+ccO+67s2lm8N
      c23D1vWbA91ysi3HhgKBWwWQzaSYXlkgUt9Gc6uP2dEkezo60IXG+fcnePbpvVwZHENWVIxi
      kUz29nPC9j31BKfPvMOzxw9i2BIaJVbicWI5m33hIIOlRRZmZynoJtU3FdeCXo2llTWaaqvQ
      FAWjXCKRWGdyJcXzL55kfi5BR0c7uYLJ1FCKgPd6BH1HDvDe++c5dqAdIbtBTxJfjVGwVDzq
      1gJ+VTTM+MIizYG2217D3vYW5oo+ulrrUXwRlie27rcNg3QmRygUuM/6ymefeHqdCaGjm4Ky
      ZW/5NyyBbgl00678WzaGaVf2by4LymZlvWzaGJaNZdqYpoVlVpaFaYFpVf4tC3HTtmvrwrox
      jMWffvngVl+gQjbFUmyNYDhKfW0UEKQTayRzZdpamylmUySyZcJBP6FQkGxqnWxZEPG7cfmC
      CL2AKbvwuiq6KuWzLMXWaW5tRZNs5uYXqG9qwetWWV1ZQnL5cWsqimTj8oWwywVsxYVLEczN
      LdLU2opLVXjtRz/k0JE+6pta8Xk0irk0y6tJWlpb0YsFfIHglsprPpMinsjQ2toCls784gpN
      La0owqBsy/hdMtm8TjDoZXlhHn9VLZJlEgj5yWYLhIIBspkMwVCI9fgyBUOipameXDZLMBQi
      m8kSCAUpZJIk8wbNjXWOALZhcmHq8RHAo8rMzAwdHR0P2wyH+8ARgMOuZjm+yFIuhWWDLQSW
      DZYQ2LbAElz/F6LSUifY+K+sXw8jNrfbdmVALGFXlhEC7Mo6wq5UAjf2s/ET4vo+sbH/WHeT
      IwCH3Y3TE+zwqWKWcvQPDqN6wqhmllQRTj5znLHBy6zEU+zrbGZ4KcXh/d1MDg/R0LGX9qa6
      O8ZZzqcYGB7HE6jh0P4ORgc+RHg7kPUVYus5Dh7az6WPhvnC559H2CaXLpynqrEDUVhnYSVD
      995mZmfm6Dxw3PEFuhXB6Z+/yp//7/8Hs2u3b+FKLQzzozfPUVyf5cLQ9MfGWFyb4Xs/Pb3T
      hj4WqJ4AHtnCtKG+rpZgKASAXi7jEWlmMgo+xSY+2c9iHuKx+C2tmDfj8oUJ+9yEI0FAorO7
      E6tUaeDo66ombQepCQcq5ykkWInliMfi1NfV4wsGqa6KkMvlUDTFyQFuJjlzmf/4o/P8zV/+
      r2TWl/g3//1fgK+aP/jCIX7w1lUSqTRf64vy735wnrb/7X9kWRf863/557gU+KP/7n/mtb/+
      f8hLIf7rP36Zf/edN8mvr/P7XzzI//n//Yx9PZ309bQ+7Et8oJRyKYqWihB5zr43QNfBPlLJ
      JHX1DYzndLpqvSzMgRSqJ5Jevqs4k/OjjCwkOFbVSDKZZHFmhKlF6Gzz8dFYgr0HIkxOTVLX
      0oxXUwgGVcDm7Nn3qGvZS3x1jWAwQCFfcARwM7lUgmhjC6rLzdAHb7L3ud+ldOkVLoxW0Xvi
      i5z+x//A8eNf5Ll0EwdaggxdWUJXAnz9+Q4+/PVP+eWHY7QHdfon99N04CnS7/8je/ue5KkX
      2XWJH8ATiPDkk09WVp44dn1HVRX1ze0ANDY0AnCgZ/9dxRlt28/X266Hrap6gUPHtob5vX/2
      e5vLL37u5Y2l64Fa27sAxx36FloOP0etPs2//V/+LZ62Y/S/9QqjuSCH2qN43BrBUIhI4x7m
      Lr7F8HwKj8tFKBjA5fFR13WME/saOXry87TVhPF53ASCIfzVLSTH36N/fOFhX57DTdx1K5Bt
      25sTTzg4fFa46xTttJY6fBa55zrA6GyM6aX1HTl5Y02Yo93NOxKXg8P9sEUA+UySlfUsDdUh
      TNmNVzZIl6G2KrQZ5vWzg/z1T8/tyMl/89leRwAOD5WtOYDiQjOyLMRsUAUuy0SXZGoiwW0O
      d3B4vNlSB8im1tAijQQ1CUnYCFlBhs3JyBwcPmtsyQFM0ySfX6OurpGoJihYCoqwkGXZEYDD
      Z5ItAmjZ6By4xt1/xu7g8HjiNOw77GocATjsahwBOOxqHAE47GoeKW/Q00Oz/MXPPtyRuFqr
      Q/zFv/jy5rpp2STzpR2JG6Am6EWSnE/hH3ceKQEUygZza5kdiUu5yXFvejXFH/3lj3ckboBz
      f/5fojgCeOxxikAOuxpHAA67GkcADrsaRwAOu5pHqhL8uKKbFql7GJL7TkgS1Aa8OxKXw8fj
      CGAHuLqc4M9+8M6OxOV3qfz6v/ntHYnL4eNxikAOuxpHAA67GkcADrsaRwAOuxpHAA67mi2t
      QIn4MkvrOWp9KlnZTZAy67pEb1fHQzLPweHTZUsOEK1twKVIWELGMkrkdQsNC9u2nW+CHT6T
      bBHA6soiKyvL6LZEyK0gXD5UVUWWZcf11+EzyZYiUG1jC7WNLQ/LFgeHB45TCXbY1TgCcNjV
      OAJw2NU4AnDY1TgCcNjVOAJw2NU4AnDY1TgCcNjVOAJw2NU4AnDY1TgCcNjVOAJw2NU4AnDY
      1TjDojziGLbNB8uLOxbfk/WNeFTnsV/DuROPOLawmcqkdiy+vtr6HYvrs8AWAcxMjpHKFKmO
      BCkpHkKUWNMlDu7d87Dsc3D4VNlSB7Alhb2NAdaLCrZZIm/YuCT7Ydnm4PCpsyUHULCZWClS
      W1ODIksUbA3NNh6WbQ4OnzpbBNDe2U37w7LE4aEwmoph2NaOxNUWiBJyPV6zS0viLoZ7sG0b
      y6rMGJ8rlimUdmYkZLdLI+z3YNs2sixTMkyyOzTKsiJLRANehBBIkoRp2yRzOzdHWG3IB2zc
      GwGpYnlH4pUkiRp/JREJIUCSKJo7lwt7FRVJkjbvuW6Z7NR4H5qsIG8MnqAoyg7F+ulyVwIA
      NhPSp8GnHTfw2Nn+uNr9ace909x1R9jtL8hm5OoA03OfrJ1akiRmJkbIlXRWlmNbd1oGqWyB
      1bW169uEzdWBq9h3IV1Jkj72YSxOjbKeu/4Gz+Xzd2376vICI8PDlM2bjBGCdDpNdnWN6/mO
      YHhgAOMu2hXuZLewTQauDiEQTI2NUCibgCB/D3bfErewGR8dZnh0HOtj3om2qd+xFPC4JH74
      xP0Agny+iCcsMzk9jSagLAxU1UM+k0QoHjR0SmWbUMjL7NwiTzz9PGGfdmtUssLK0gJC11ld
      XUF2+UDP4fd5mFzJ0hT1s7y4QEd3L4qeQpJlUukkUxMzmGaZQDiKVE6znrepi/oIVjXQ3FB7
      V9dQsiWKsSXiUwnckSawimQVwfBMjJdeePaOs0Hqug6KRjK+QCKVxqcK1NoeCrEJ5pfidDc1
      kUysUh2qpanWj6xILK2sk43Pki3paB4/Ua/E7OIaja1NuN1+9rQ139HiQnoNGcFaIsXM/ApF
      08QfrEIYZUqFPFV1DSzPTqKF6ji0r/Mu7gGUs2tooXqqRJbx8QmEJCMbeRZX0xzs2cPA8CR7
      O5rI5fKEq6oQrhCr/RfxRhvp7e64q3M8inxiVwiP10fA76FcyBGLr4HqpqOlESQFhI0kKXg0
      mXyhSH1DEy719olJUjSCbolMoQSyhrAt/OEoHe3tVIWDuLx+OtqaMA2LlZU4kixYWV6ipqGV
      aHWUoM9F2bBoqK/D7QvS3FBNqVSmVLpzub+UXmUtXSSRTBGJ1rC+toppmiRSaSRhYn/M29oX
      COIyM8yt5ggEAhi6wWpsmZKtUButQlU1Ovf2YJtFYgsLlFFJJmIEIzVUR6upqQpRLOk0NjUi
      q2462poolUp3tHtpZRVZgfVEmtbWFvz+IO2tDZimgUBGEQYmKoVC7mOf3zU0j5/02gqx9TSK
      BIFAgHJJp7GxkUQiiU+TKVmCvXvaKOsGpWwSU/WQz9/9OR5F7roOcHsE+WwWW1JwawqGJXC7
      NVRFpVwqgqyysrRAbUMTHpdCPl8iEPDfNou0TBNZkdENE2GZSKoLRZJQVZlCvoDmcqMoEiBj
      2xaqqmKaxnWhAbZtoZv2hg0KhmECoGm3yXFuOK+kKNiWhWUa2MhoqoJtGRgW+LyeO2bphl6m
      pJsE/F5yuTyBQIB8Lofb68UydGRFQ9VUxMbwkhW7TSQkBAIkkIUgX9Lxetyo6sfbbZomqqpg
      mhutNxKoSmXdtkxsZCxDR3O7cd3h2m+mXCpiI+Nxa+TzBTweN8WSjselohsWbrcLRZaxbBsk
      iVKxiMvtwaU9vg4Fn1AADg6PN443qMOuxhGAw67GEYDDrsYRgMOuxhGAw65miwAmB87x9vsX
      ee/sOyytZT5x5OXsOsuJ+2snnhm7SiJ3a2/jwIX3OHexH8PavvFqdnYWgGImztDE/H2d/9Sv
      fsbwRCWe5Ykr/Or0+7z/3rvMLq3fUzyX33mLtZvchGyrzNzCciXu6RGWk4X7stHhk6N8+9vf
      /va1lcmBc7T0fYFDnY2cPn2GlvqqSpe74sYjiiwlclwZuEpzXZT+/n5yZYugR6H/yhWKJoR8
      KsNDoywuziFpfuYH3+OdgXkioSBGPsnI6DgGKpGgj7mpcSZn5tFtQcCjMnBlgEzRoLoqDFQE
      4Io2k1yZJRZbZmF5nXDAxWs/+xXN7R3UVgUZvHqFTNEkWhVmaXaS8ckZhDD5yU9+isvjo6Gu
      FsOSCXhkBq70k8iWqIlGGBsZZHlpiWzZIhoJAbAeW2R4dAzVEyCfjHH67Id07u2mJhphZaIf
      T9sTPHmwi3dOn6KjtYEr/QMUDEFVOMTglQvMLyyieEJIxQSJkoLfbTE/v0ZmdYFwazfZlRlG
      xyYQipvs6gw//eU7BEIRqsM+ZE8AUc5wZWAQ3ZYJ+dwMDQ2ytLCApXgI+b0PJXHsBm4pAi3M
      TjF09Qq1TW2cOXuOo8eOcenD9ykmFvj7V1+nvbOLM2+/zd6DR2lrquOdM++w/3Afc4MXSRVy
      jE4vc+TwQS6e/5C21jb27j9IR0sD/mCY6uooZ94+RTY+w8hSjr5D3Vy9MsT775yhY98hknPD
      rGS2vi4Hr/RT39ZFcXWGAn72dHRwrO8w5997l/Z9h0jOjjC3MMPV6XX6jh6mrr6Jjo4O+o4c
      RBRTjEwt8v6Zt2npPoinFGNwdo0rA4PsP3iY4YGPKiexy5z9cIC+vj4uvP8O1Y2tdHR0sH9v
      x6YdS/OzjAwNEKlt5tSp0/Qe7WNtsp/Vgsno+DR9x47x/jtvk16eZCqWQYg8Q0Mzm8cHQhGi
      0SrePnWKhpY29nTu5UB3B+uLEyynSrx9+l0O9x1jfugiiVyRkYkZDh89xOUPz38qD96hwi0C
      CIYitHYd4Om+/ayuLNF/+TK19U3YSDz7wm/Q1lBDyYSgR8PtdrO6Gmd4oB9vtM/pd98AABSb
      SURBVA5FCIKhMIosI0mAJFHxtbV5+9en8AZC+DxuMutr1Da1IMsVh6/V1VXGhgaQPBG8N7lK
      KJqHgM+DIsvc2GW3thZnbOgqkjeMVMoQiNSgqBqaqiCxNY582SLkd1NbEyWRzODzB9FUBVne
      CGeXUFx+FEVFUySs27g/BIJhGlu7eP7pPixk3KpKbdjLelbH4/OhyAqqsp0Dm82pU28TCEXw
      ujVAgi1OyAIhqbhUhaqgm3TRIBAKoygKj5Ff2WPJFgF4AyFqqqOENtwVjh45iG5YKJoLVfMQ
      8LkAOLp/D++8d47B0SlOPHGEXElHURQURcPv94AkEfAH8Ne1klsYYX55jYDfw8LcLIYNDV29
      xEcv8tHlAQq6ydNPPUE2X0JSVFSl8sQ9Pj+qLBMIBCq2+QMocsVHRQJOPHmcXL6IJKtUt/Qg
      UjOcP3+eRK5EdcjD5asjCFnF7/PQd2gf7519n/PDSzzR205wI85AIFi5cDVEXVDw4YcfEKxt
      QVOkzTAALm+AuppqwqEAkiSxf08L5z74gKmMSk+9l9WlOT784BxNHd1EmztZnx6k/8oInoC3
      YrcEfq+LubkZLBQU1Y9mZRmbnkfz+HCrKl2tdZz74ENWDT9tUS8Bv2/Dxut2OOw8D8UVwtQL
      jI3PIsw8eYKcOLrvQZuwo7z+s9f56le++rDNcLgPHooAhBAU8jlMIREKBB77bL5cLuN2ux+2
      GQ73geMM57CrcTrCHHY1HyuAkZHhj43EsnZmVAEHhwfNxwrASdwOn2W2FYCejfP3r76Gy+V6
      kPY4ODxQthWAsC2K2SSjUwsP0h4HhwfKth9zmuU8n/ut36O4OvUg7XFweKBsmwN4wg1MfvQu
      ufL1VlI9n+TK1SESqTRXLl9ieNwRh8PjzbY5QDmXxPaE2bunbXPb2uIKQlOIxeaIVLdj6mls
      28beGPHAweFxY1sBqJ4AK7NjDLtVXnj2SQBqmhuJTy7gq4qSTS3g8lchyzJCiMdmLEgHhxvZ
      VgB6ZgXhrwXz+scaLn+EviORykrrnUcvc3B4HLh9HUAIYqkyXitHXYszO4zDZ5fbCkAIi5VE
      lpaWJvbtaX3QNjk4PDC2aQWSya6vsLy0xM9//e6DtcjB4QGyrTeoEDbrq6sIxUVtddUdI7Es
      y6kEOzyWbNsPUIiPc+7KJEux1Qdpj4PDA2VbASieCHo2ztp68kHa4+DwQLmDN6iFrLgqE0A4
      OHxG2VYAkiSjqiqa6pTtHT673LYjTAib8clpsHUkWblxB6MDH6BF95JdncPlj3Cg5+6m4HFw
      eBTZpidYorEmQqjlCNn4zObW9eVZUkULJbFCXY3jC+Tw+HNbAUiSxNzMFGPrM3S0X3eGi9Q1
      0+t1kyho5BILuAJRxxfI4bFmW1+g7r2d0FRDcWVsc5uiagSrGglWAc01D8I+B4dPDdu2txeA
      v6GH4pnT1LT1PEibHBw+FUqFAkvzs+SzGQzD2CyybyuA4tos/TNrHJI0eva0PDBDHRw+CeVi
      ntjMOLHpcYrZNIo/QrCumcTiNEIv4fG40Kw8UimJZqa3aQWyLUbHRulobqC2uf1BX4ODw10j
      bJtsYpW54X7iM2MYepn6PT34qhsoSi4a9uylrakGtd5CSk2DbYCnFst7gLwW3iYHkGQQMoqq
      PfYTITt89igX8qxMj7I0MUQqtkQgUk1T90Ge/cY/xxMIsR6PsTQzzomDLXjSVzCmLWa0RuY8
      fayXDfSSiV2EgPsOrUD79nUzemYQRXEGj3N4+BQySUY/OM3awgxIUN/RQ89TLxCpa0ZRrydj
      2zLJjb7NHi3JTKyGMbmJguyj3hWkq7qOJ/1+3KqKIslIkrR9HUBSNGzDcYNweHgIYbO2MMPg
      u29glEvsPX6SQy/+JqrLfft5GEppxNhPWbEKXAo9QWOklufr6ol4fcgb4YUQ2KaBoeexdH37
      nuBL/cPURINo2rYacXD4VDANndnBS4x9eIZwbQOHXvwy1U2VuqhtGhjFPLahY+pldL3Msi0g
      NUHL2hUG9QYaGo+wR9Wws6sUE0vkLROE2Gz5kVUNxeVG0Vy3/x5ACIFtX58m5Vonl6kXmZqZ
      o7quiUIyjitYTX1NxPkewGHHiM9OcOlX/0RT90G6jz+HNxjGKBVIzU1STMSRVY0yEjOZNIuW
      jezzclQf42BTO5eXNVr37sfv8yLJCormQtY0ZEUFNmbvkbbO4rPtBzFWOcevzpznSG8Pzc2V
      D+Aty6SUz7AYi+NyRTCNPJ2de7AsC1l26goO949RKnL5rZ+QTyd58iv/jEA4SjmbIjU7hlEu
      E2ruYBaZkdU4MtARrWavViK8dBbanidhhYmvLLP/SN89nXfb8k0pHWNqdp5yubQpALOYZWEt
      T1dHKzNz61iWhSRJyLLsCMDhvlkcv8pHb/yYwy/+Jq0HjpJbWWBx4iouf5Donv3kVRe/HBui
      NRLltw8exasqMHcW1hfh8LewFB+z585y5Kmnb02HwgZ74x1v3zr527YCcAVraIlW5rdaWkvT
      VBPGRgKjQDIbIuxXcAXbNrOT208O5+Bwe/RSkdX5KSYuvouiuXjx9/6EUjLO4sUzBGqbaeo7
      ieJyc2F+lom1OJ/v3k99MATlLAz+BLRaCD4N/UPMF/I0JJO43j51PZFfK9hIElwTxW1e0tsW
      gXJLQ1xZ91Nem8Lv93PixIltL8apAzh8HHqpyNrCNCtTo8Rnx7ENg6r6JupaOtAQqB4vkZYu
      vFU1SLJMopDnjbEhWsJVPNPeiWIYkJiA8TdgLQihVqirpxgOMzQ/y7GnT1be/hJApax/N3Nv
      bf9RvKXzd3/1H9Ea9vGVzz1DKBTcNhJHAA62ZWKVy5jlIqVchmxqnXRilWRsiXR8CbOYJxiq
      IlrfRKSmHk8ghOJ24w6ECdQ1o2w0beqmyaXFOabW1/iNhibqkymIT4IxCW17ofYERGpBURC2
      zZULH9Cxt4dwtPq+7N62CJRdGkXU9tBSE7hj4nfYHQjbxiwX0Qs5zGIBPZ+pJPTEKtnEKpnk
      OoV8FiHJ+KtqiDa2Ud3cTuv+o3gDYTS3G2QZSaoUQ7YUmU0TPZ3icibFxMQYh9MZvqVoKKsL
      YE1CSzN0/jH46zbf6kIIpsdHCUWq7jvxwx1yAD23zuJagaJh0dvdccdInBzg0UAIgbAtbMtE
      mCa2bWGbJsKyELZV2S9shF35cW1ZiI1tlTCVNvYSlq4jbAu9VCCzFqOQzVDIZykWC6CouPxB
      wrWNROqbqWpoJlLXhNvrR5IrvawYBpRKUCxAsXjDfxFKRTBMdEPnsl5mor6Ow43N9CoyiqJD
      YRrKKWh/EYLNtxRn1uNxFmenOPzkiU1R3Q93nB/g9V+8wZG+PvgYATjsPNcSolHMY5QKWOUS
      lqFjmQaWXsY2DGzTQCCuV/iEQFIUZEXd/JdVFUlWNxKljCRLG/9y5Y2sqEiShGXolAo5Ctk0
      udQ6uVSSfDaNbVkobjf+aB2+zhbqaxsI1jaguD3YgF0uYxcKGPk88bExrEIeq1jAKhQwdR0b
      sDQNy+OhpGmUVJWColDyexHCQCsX6PEpfMufQMnMVPzQfDVQux8ie25bji/k80yPDXP0xLOf
      KPHDnVqB/BFaWlpoa7j/7MXh4xFCYOllytkUpXQCPZfBKBUqX9mpGqgqpmFgCxCALWxsIRC2
      AFlGCDBUFUt1YWpuDEXBVlQsRaVsGpQMg7JZ3vhs1a60kljXl4VtU8rnMPQSki0AgYSE7I2g
      BmtRJBlVkkgrCqoloySSKPkiqsuF4nIjKzKyJKO6XUhuF0q0ClmSUWQJVVaQJXDbJopVoEbP
      4Cmv4Sut45UsZM2DXFePFGgAfz14q0BS7lh5tSyT4csX2XekD20Hpu/afn6A7CqLyysgbDo6
      Oj7xiRwqid0sFSjnMpQzSUqZJFa5BLJMWdcp5HMUCzlKuk46kyJfyGMigddHWUAJsFxubLcX
      1R/AEwjjC4bxa24CQhAslgnqZTyFIq58DlepRMCt4XaryMpGc6AMkqKALFWWZQnCGiiejf0y
      qAqSywWahqQp4HJXWleEBcKs/Ns6WHmwzYqLsWWCZVTWzVJlG1Ta4VUPaH7wRiG6v1KWdwUq
      b/t7aD4XQjA+eJXGtnaCofCOPJNtBaC4w3Q01XLk+PbNnw5bsS0Lyyhj6eVKcaVcqlQccxn0
      Yp6yYZATgqKiUdbclFWNRDlHIrGGsG00WcWt+nC5fHirqokoEh5VwaNAQFUIqhIBRcavyriF
      iVTIIuWXkNYylQQnWaCpoGlQ5wK3p/KEVRmUjUctV9wCkJXK23YLArAq4qBU+QkVyrlKWEWt
      HK+4QPOBrG2sV/6FrFaKY4qr8pOkyrm4KZELC4ziTZs2HC8tHWwLbBNhlsEsIYwCmCVyyTXU
      5QVqXT0YI4OVsJ+QbSvBRjHLmXfPspo1+cNvfm3LPtvSGegfQPNH6N3X9VhWgm3LQlgWtl2p
      JNqWhW0a2JaJvVHWtg29UqG0rI0KpVGpUJomwjTANBG2BaYJlkXRMEhZJmnbQkdgKQqWJMCt
      ImkKijDwCoOwKBO2DfwYeDHwSQLNVSlCyIqrkqgkrickdWOb7NpMcAJpI5HJG4nThZAUsA1E
      KYPQc4hSGlFMIMpZMEoIPb+RoIob9YZrj/6GJHBLchC3XbxpZQOpIobNqCqVbgBhi00fs0px
      TqoUy2wbyxbYSJWinZCxBJV1SQPVjSdYjTdUhS9cjeryXD+b6r73B38T27tDywr1dbXI3lvn
      CbatIlW1HVuGRdF1HVmWsW0bacPh6G6WdVPn9dEfoZvl29phCRshQMZGBmwhsIUA28QW9kar
      hrW5XaVSRr5W5hW2hWVfb/2Q7UqLyGYCECAQmy0ht94ICbWS3JAAWVDJ1iWQsCp7JBtJ2AhZ
      RpYlNCwUBJggIZCMjRKEsEiYBgtmGWHpCFO//ubj5o6bjxlmRty0IG5IzEIgJBlT9mKpfnCH
      kTQPuPxIagThqt846oa388afsEWlYr25fC36jXoHFW9hIQRIErZlw8YRlZalysvl9lcgNodi
      E1y7mbciKwoutxt/IIjX76+kFSRsu4R5Fx9oWcLa4sx5DdOufAtsCQtb2Fi2tf0nkf/vX/5f
      1Dc0cOJr/9Ut+xU1QD49iCsQ3fQF8ng8GzdHbLbx3s2ypmm82PV5jB3Izhw+21Qq1x/vnq/I
      CsptWodUWUOSJBRZ2YhL2d4d2jINRgcvE8/LvPzck3c84eNYBHJwgDvUAe6Fm78fuLbtZge5
      2227l7DXTL3beG3bvsU78JPacK9hb2fDp3m+223f7j7A3d/LT8OGnYj3k9qwI597SZK0JQfY
      7uY+aK4VzxwbHg0brv0epg0334cdyQEcHB5XduyD31gshk+T0NUA1SHfHcPalsnU5ARC9aHa
      RUq2SlNNiMW1NE3RIIsrcepaO6kN+297/ED/R+w71Mfw5Q/Zd/RpPHe4imxqjcWlFcLROtZX
      Y1TVNaJnE5RshaALUkWTA/t7UO7xzRSPxwi4VbKWi/ronZ0FhRBMT4yi48anmmRK0FIXYjm2
      SrS6llh8lfqmVuqr761zZ356HHe4HjOzguWrobUuum1YyygzOTWN6glglzLYqo8qv8rKWoqW
      5mZmF5boO3zwns4PQDnDSkGinE3T3vbxA6jFluaIrWZobIwSi63R3NZBfGUJjz+MnVnE23KU
      hpD2sfHcyNL8NJInglxOU5S8dDTXbxu2mEsxO79EMFJNej2O8u1vf/vb93S2bVhZmmNxNUNb
      XZA33ngTy7bpHxwj4pdZWk0wOTLBzMIC+UKR2ppqFGzKlgm2hk8WhJuaySbXwbawJEinStTX
      3n5usnQiRkm3SCQS+DxuTr31a4QkYVplluYXyRbyXOq/Sn1jE36/j3w6SaGk07pnL+n1Vepq
      q8iXTGwhiPjcyJ4ALvXeigirK4tMLq7R01rLm2++gWmZXLw8RH21l7mVBONXx5mZnyGTL1JX
      U40mQ0E3wZYIKRL+xiaKyQSFjE7nof0klmNURSP3ZEMyk6VcKlIqZEFWuXrpHIlsmVJZJ7G+
      SmItwcjVy6iBKoIBP5JlYFoGQgmgCYO6pgZSiTR1jU0Ucymqq+9jvFc9x+lzH7G/9yDDl84y
      sZhkcWoI2RsmtrTI4uwU41PTxFbXaWhoxOd1s55IY1qC/fvbWV7MEvYrCMVNQ0gjZQeI+O7t
      vbyeymCUiujlMrawGem/QDxdolQsYuWWWV7Lcvmjj4jWN+L3+ynns5hWmUBV651miLk3VLef
      1pog4xMz1De3YtoQ8UokMnkEEm1t7dTUN+Jzq1jlHP2DY7hdXkqFJKu5Arn1OIuLi3gCYSzd
      oLp2+7eZy19FbGGWutpq1tYStDTVEYjWMDU5S111ENntJeqVWc8UmB0bJFkSVIX8TI2PYssS
      ly4N4Ha7sPQCS6tJ3PeY+AEkzUNXUzUjI+NUN3ei6zr1US9riTQCQVPrHmrr6gj6XCAMLn10
      FY/bg1HKspTOMTfYT8FWqYp6GRscRrqhg+cerEDSc6i+MOVCGk+oDllSKKVWCEbrEELQ0NhA
      LBannEswOD6L2+unkIqRLpYZ/OgSkuqikE2xuLhEMnN/g6DtO7CfxfkpyqaGS7FpbGwkthJD
      CEE4WkttXR2NdVUI4PLFi2huNx4VhgbHQOQZmY3j1lTm5xdYXl6+tS/uLlCFDi4flp5F9kSR
      AauYpCAFkWSVumiI1fU0q3MTLCby+P0hYgsTO1cHuB6NwBYgb3R4bVf5ut4ZBkJIsNEZJW0M
      ty5L8rZuIjebLITAKOVZXs/R3tKwGb8sy7DRQXZtGPdrHXFIErIkVc51HxXE+7neG895LY4b
      7brXCuLt7oOEzcTkLF17Ozc63663hmzec0BUbvzm/mv3Xr7XSqrY2lm28UAroy/cElhCCKvS
      sXnT85A270ulonovZtx6H2wkJCYnp+jc21W5XtuueMAisO3KtSKEUwl22N04Qzk47GocATjs
      ahwBODzW6MkFvvvjt0gvjvHKa7++Zf/E+DxGKcXF/pHbHv//AzdOmdcx7t8cAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='130' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACCCAYAAAAQTMdgAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAHMUlEQVR4nO3df0zU9x3H8afcZSueTlrATAIpBVu7UtiiEv+ymQvaIRLGlM3FLJi5xNK0
      VqNO2j+2bDNzENtkVmc1JZPMrVQoDISONWZrXJRYuGbdwLouQ6wEJUBKmXccA7z9wekQCncn
      Py7b+/X46+D7ue/n88f3ed/vfTlggd/v9yNiVFSkFyASSQpATFMAYpoCENMUgJimAMQ0BSCm
      OYMN6LjZPR/rEIkInQHENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAsenSy2zZ
      lBP8s0Aioeiqep5dp9qDD0zZzpEjBSSEPUMnNbt28pv2mexjMp0BxDSdAWRWJGx5laot//26
      +ZUcSv4IkMK2114lPzFSK5ueApAIGuXTtrcp/1UFl670M4QTV9xyVm3+HoUb01jiGBs16fKq
      /RS7Np0KfPE1DtTvJRMYHbzOXxp+R/27LbR39uIZAZyLiF2eyTd27CT7S4snrUCXQBIho1yv
      KebZA69x/ko/QwCM4Om9wvkTP2Dvj9/m+mh4e+xuKOXQqUb+1hE4+AFGbtF35U+UvfhDaj6e
      vEMFIJHRWc0vyi4zBMSsfIaSyjqqaqso+e5jOIH+909Q9k4PELi8qj/BtpTAc1O2c6S+gar6
      BqoCr/4AOBaRum47Lx79Lb+ubaCqvo6ykm+x3AmMfMSbVS1MTEABSES0NbxFBwBpbN6VS2q0
      AxzRpH77JQqfABihteYPXA1jnwn5hyjZW8Cq5CVEOwAcLEkrYOOqse0jHR8z8fcb9R5AIuAm
      7X//19jDlEy+HDd+WzxPrnoYLl+Drjb+8Qk88mCo+/03N9+r5cyZ3/NBRzef+oI/QwFIBIww
      MjL1Vocj8O6XW3g8QEgBeHn/6LOUNvYwza4nUQASAU6c0xx5o6N3rtQX4XKFuMtP3qUucPDH
      rNzOC89t4oml0TgYf0t2Mr0HkAj4IikrArck25v5oHf8th5a3dfGHiak8Wiolz8ffUgrAA+T
      /f0C0gMHfzAKQCIiLWczyQC08eYrNfxzcBRG+/mw/GeUXwZw8mT+0zxy9xkPERsfeNh+nnNt
      /YwCo4ODDAM8FMfY5ms0/bmdYcZ+LuCuOkzFxanXoUsgiYzEb/LCjvcoLrvMrb++zoGC1+/Z
      HLNyJzs2xI/7zkIyszcQc+kd+mmn7sA26oC7Pwh7dC1fTThDZRd0vPE833kj8LQHV/KVBLg2
      xceUdAaQCHGQlP9zflnyDE89HsPnAXDiinucp3aW8vKPNpI04RomevVzHHopn/TERYFXbieu
      uC/wOQBS2FL6E3Lv7OuBGB77ejFHy37K08lTr2JBsP8Qo78MJ//PdAYQ0xSAmKYAxDQFIKYp
      ADFNAYhpCkBMUwBimgIQ04J+Fqi38/p8rEMkIoJ+FMLr9c7XWkTmnS6BxDQFIKYpADFNAYhp
      CkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhp
      CkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhp
      CkBMC/pvUsUmj8fDvn37aGtrm3ZcRkYGpaWl+P3+sMYvXLgQALfbTXFxMUNDQ5PGulwuDh8+
      TFpa2qytc+K8CkA+k8vl4vjx41Nu7+vrY8+ePaxdu/buQRXueIAbN26wYsWKew7OuV7n+Hl1
      CST35cKFCwBkZWXNaPzVq1dZunTpfR38szGvApCw9ff3U1tbS3Z2NrGxsfc9/vbt23R3d5OU
      lDSv6xw/rwKQsF28eJGhoSHWr18/o/Fer5eenh6Sk5PnYJWhzasAJCwDAwNUV1eTk5NDXFzc
      jMYPDg7i9XpDOovM5jrHz7vA7/f7p9uR1+ud9cXJ/6Y7d1wyMjIoKiqa9fF3ntPU1MTJkydZ
      tmwZBw8eZPHixXO2Tp0BJGRNTU309fWRm5s7J+Nh7K5OVlYWx44do6+vj8bGxjldpwKQkPh8
      Ps6ePcu6detITEyc9fETxcfHk5GRQWtr65yuUwFISFpaWujq6iInJ2dOxk/F4XCENT7ceRWA
      BOXz+aisrGTNmjUhv/qHMr61tRWfz/eZ2zo7O3G73axevXrW1zl+XgUgQbndbjo7O8nLyyMq
      KvghE+r4c+fOsXXrVioqKujt7QVgeHiY5uZm9u/fT3p6+j23MD0eD0VFRRQVFeHxeGZlXn0U
      Qqbl8/morq4mMzOT1NTUWR2/e/du8vLyKC8v5/Tp0wwMDBAVFUViYiKFhYVs2LAhpOBmMq9u
      g4ppugQS0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBM
      UwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBM
      UwBimgIQ0/4DJyO0Vvr22AEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9539ex3Xv+51dnt7RO0gALCLYxCKSkqhidcm2Epc4cUmck+R8Tsm9+QPy
      4ry7b+65n3ySnJzYSRznuMR2bCcqtiVLtERRVCEpFrETBIjegafXvffMffGgEQRIkAIpWvaP
      HxLg8+w9e2b2WmtWmzUilUop0zRZDRyPW5yMW6vS1q8LVHISMXiOvf5+1lYoJPBqYSvTVZup
      HXmfQHGSKj3DmojFyTE38RxsrSlxzFmHKubYHxrA79JmWhOzrc79P2spXtYewoo0Eh46ydPq
      NC79zo9zOZQkjGUVTcFy36UCgaIrZVDntXnDXkti7T4Q2g1a+nhgmKaJx+NZlcZSQG9Jrkpb
      vy5wTwzzQPowU2mb9R6FwiE2Mc2FiRxXmncg9CS1/W/RM52h26gHZXG8sBZVzLF2+DC94Rzb
      6iTzxA9KKRwJI0nJWaeRrvUtGINXeHbsRQLeu2l+FYaCtQhEvEz8BQnH4l7e9WyhUIxgte0E
      a3UE7M3CKyR5dX3GM+5QXz6RUEoSmrzIuliJmqCGQACCfZVTeEYP0Hf6OOcbnyIRbWfMX4N0
      +2kceotdiZ+xIZQhvEHN3bMYugbHp/ycaXscVcrz7NgL1HruJuIvQxNX/24A98fy7OM9Xiq0
      c8zYt8To7gAUNLkcukqCgKbwCsWUo+Es6s1vGeAmoZTEP3CCXPV6MD0Upc7LA5U8WT9FU1QD
      dIRQNARtTo4VkeEEX+QlggoGpgJcLFaxuz6FJjRYhvgvTyp6ki56Q1soVrRCqUCpUKToAkeB
      TwfxsVDVYlzdCVsqfthtUog2EnTrnG97CqHdedXHJRS1psODYZsNlsMHGYNal+ILwSKnsgZn
      cwZxRwMBd6didjcjHefp7C8Ij50FIdhu9rCjIkHUW/5aIBAY1Polf3BPgvWZk7w34MalK7bH
      UoS1PG9PVDB79UIUbMiVFA1hCJiSZE0nQgiE28svNvwJ/698jK7M3SuzBrMCGarkYe8w0/56
      nHDtne2AgmbDQSro9DnUemBLUPKVmiJPV1jE3IJHYg6/W1GYu+W3DHCTEMEYLwQ+i5A2CI0J
      XytNQZuMBbPGq0AghIbXpdCxCVbG8JoaCMX+2AhDUxbjGbAcxbzBq+hJaLxwwaQnoTPhbcYO
      LSCgYAX59r3Ehf8Oj3jlMDS41zVOwRGMVt5z25+no6g3JDt8RaK6pM60+Vpdke0+mzFH552U
      wQ/G3OSVjliwZJ7Ou+Zkz28Z4GYhBFZjJ/Gm3QghOFf7GAeHA4Q9gqJVNmCVUpTZQMOXn2Qs
      XuLAUAiUIOCG9aE0ZyfKrhyloGdSkipAQ8CmPiz4UcXXOd7xZYSxyHjUDQq47/yYV4h6Hwwb
      Vfzwnr9Axhpu+/PavZIv1RQZskw+FSpiClAIIqbiUk6nK6+xLWjj19XcPR+kdY5k5t1od+96
      ejdAKdxDp6ktDTFYtQsnWAlQliYzxKkMN7o3yL92++izKtipXWRPi6QqoKHQeGZdiWxpmp8O
      1pEtJQi4YXuDBGwEguGk4qUuD4VADaVII9aGvQhvcMnuGKkxOl3Td4n+fy00AROeWvAG7sjz
      TBSmgM9WlCg4EDYkJanYEnAYtjTOZg0u6IoTGYOnYxZDJY1jaYOFqudvGeA6ULbFQ8lX2Veb
      4cBIP4dKz0Gs/ioLVHgDHL/nTxCpCdYMvI4rB+kCVAagZCtsqTg3ZTLpb+GtK2M8s8GmZIPb
      ECgFZ4cVxXwBvzlFrQPd7qtVHKUU2vQwDVNnWJfvpslv3+lpuCm4SzlUMY8WH0bVtt3WZ03b
      8GFGY2eo7B3LOA79RZ11PkmdoejWFGdyBgj41phGTl4rOX7LAAuhZpbKWQI3TF4R9zPRe4R2
      7xB/MPVNflz4IqX6e1DSBgXCMBGGyYahV/hiQy+apiFmNMvjA5BQAU5NBzGiaS6KNehXhhGO
      zZPtZUKO+OCRDo33En76KnddpasqKWm4/Dpfsg4ScSmEb9ZzdHdiICc4r9Uj7BJ4br+tMlzS
      CQvo9EvcmqLd49BTcAGwN2ITMBSvJkzyUlxD/EIpFL+1AeagHJuOKy/gn74895kQArFmCyd9
      O4l6BW0xyWdzL+AavUjVwLs83vePmNMDAFwM3MuZUQ0pywEhRyosDLoKFXy1Y4z/3nKa56u7
      mZzKs7/FYpaQ11YIdjYq/uumcdaPvoEqlT0UcmqETed+yOdLB4m6JUJoVzHH3Qap4MdqF47u
      Rrl9qMjt9wCZCtp8Dh4dRovQldcI6vOxkhqXZKP32hXTJyRKCBDitysAgGfiMvumXmZHZJqB
      xAX+1f/niBkJZsYHeNB+HyFAF4JNsTxHkr2kjTB7A6OYUz/lHetTJJs7ee3DK7jGTxHzQ8+0
      xoeJELU1OrVBxbE+2NmqqOgEl16WO0IIKgKCXEnx5hWdnsb94PLQcOHnfM5+h5jbQRfw6yCn
      lFLIYAX2mr13jFHduuLdtMEGf5FjaZOUBBeCz3tKvBk3eTdj8Fi4RKUhmbTn5zC3IDr8WwYA
      RGaKI+77OF5QKCHBNZ8aYle0MJxt5thgjrZAhoerJoha4/RHt3J+0sfu2BTdIyeJ+xrIt+wg
      N9lN31iRroSHRHQN65zLHOqGkYzOVlsR9lxLHMmCwBPwUwrWALCm0E91ABRlb4W4i9WeWUwX
      BfHK1jva14zUyEg4ntbpK+nUuvLsCmRQyo8uwEEwVNCpNBzitrgmCgy/6QyQSxEbOc50/Q7W
      jrxJi9XHxVItSW1Btpnbx4X2z0N9khO6Cf0/5eFAN8dtm3emK2kL5kHTEL4gth7lhcB/Q+TT
      KLcfDBfvjHWjZ+Psdb2FS89xekjSWa8hRFlqTuUEUsHpXNVc4GjcW0/RGcKl3S0R3xvjSsGH
      lApNSdQMod32lWCm+TdSLp6MxGnz5AnqHoTQ6C+Vv7SU4vOVBX4Rd3E867pmQu/+tfV2wjBp
      zHez9cK/8NXwEXxWiqGK7XNfa9lpRC458yI1dpz8a7po5sf53YhIDcOtj/K347tIuiqoGHgP
      kUuC6UEFKxAeP/6x83wm/e+EzRKZvCRbgrGcjpx3S3NwNMLf+7/O1O6vlG0OIbjU/jT/6Ozl
      7WkfzkxcIW1x1X13E5RS9ORMnjr794QPfxc1MYiaHrmjfbBtFwcSUY5nAgghGCqVhdigVf75
      dMxGW2L+fiMZQDk2we5DKN3k1MY/ZCrQilSwLpLDFM78dYUc7V0/BUD4Q3yw+b+SabufwfZn
      EKYLqluJeRWfst/mU/kDUMwh0lPsOft36OlJpOllbSjP1swRujIB3hkw6axVvN9XjgALIagJ
      gYjVXe39cRyG1zzIwZqneGvMxQvTNfyN8TR9mbt3OdgVTuP3GLgjMYTLgwhV3rFnKwRnix5a
      XBq7Q5JfTRtYM8Te6HJ4Ne7hUt5Aar/pKpBVZGP3TwiSo7Y0xMEhF4mm3Qy0PsHfDYWZCqxB
      VTTMaYoyWkdkII0+cgmnbh3CH766PSHob/4U3y3uBc1A84cglySoUriSQ+QqO3jpVDW/0zyO
      4zgEdUXQ7XBuykPCgqInyvmGJ66J+IrUJHJ6FNvKcqD+M+yfOMD+5NvUBa5Om75bIISgLeAw
      IBSmIfDkJihGqu5oH1pdDjvDCiGgq6jPqWEXiyZ+TXKluLSs/41igMahQ3y+8iKGJjg55SdZ
      vQlKBVQxx1Trg+WLlEJJB6HpCE3nZOvnUZnkku3JySEik+fBMEnU3wtCoNx+Xmv8Y4QvyO7B
      H9EUjuNzwSPNubn7Pr+pSDIvOJEVFKRxLUlXNhJMDfOnxdex0hAOKXwfT0r9TSHmcvgj8Q4H
      xod4r27jHTVg3s24yCubZrci41z93KzUyC5z32+MCiRGLvOc/g7ZouLChEZI5FC5FPXHv4Nu
      LcgOTI4TufSrmXweKIXrcGrWApQZY/gScnIQVSqgskket9/mLyJv8Ln+v0VPjIBdIpgfY+OF
      77NJ9bClyi4HxpSG4wh6JxV+F7TEBFt9Yzwy9m9zvv+FyDR08v10Bw4CW82mTd990h9gqig4
      Evfxd/qT/IP2CKNmJXfcXBGCrryOpSDnrHyefiNWAJWc5NnUf1BbZfPWUBDTKXDetxXTypJo
      3I2M1pVJy7FpG3mDiJ7j6OzNjs29H/4dZ9f8LsVcgbV9P8ejO+RK0NP4GG9anbTbp2nyFdjd
      +wNCWoG3x6NkVZwzCUm2KJDoKBSXxhVBl+B8JsyjDWlcpkaX1QHmtQluwu1jdMMT/OiSwcP5
      i9xbOR/gUUrdVUGxoiN4R9tAvLYTIz2O7pQ+lv5llcY7KeOm5MQnngFUJsEXx75JU6DEpXHB
      JdVMKVzDhKeBnVd+RDDk41hfllTDDpRVZKM+QEArcKyQRXn8oBuMWUEael/HthzGLD/PRgdo
      jir+tyOZ2vg03/kwRdDvot4TZ52vQLE4zlFjG4MNm/mgVMBrZ/Bnhhi/7xH0XBxHGBi93+V8
      9D6mN+xfllhEtJqqgMFWt+RSQpBTBhNFgwlXNRGjyDZznDqP/NhdpfU+hx3TXZwbcNMf24iT
      mPrY1qqkvDml5hPPADKX4chEiDd7C6yJSobqthBM9tKafo+OcJ7WiiIP6q/yv3ozTLQ/ztv6
      Lp7XDuLpO0azNk53w2Nkg/VY3UdQoUoeik0ymRNsqFHomRJKSQZCm9CaNzI+dZ5OfsF7QybF
      /TtQMynBOSDHLgTg+IJQyPJ255/jPldWtZYjFiE0Lq7/LN/sCZN00hQaO7EjdSjTBaaHw2NX
      uHfodZ7yDeD/mG2EB2Np1uaO8PdqHVag4teGsPS//Mu//B+GsTrdvZyxuZJ1bnzhHYTmD5Go
      2UzaW81I5Tb2Tr/KsGctjcnTFAo27ZUCoQl8qSHOmxtRmsk66yIdpYu06OMMFnxMN+xBJcfZ
      4Rmg2u8Q9ij8bsGRVA0FS6CbBkoJCtUd1A6+y1PtJVJDw4yF2kE3AIU2dIldoy/THj9KdOw0
      o2Y9MlCJCMaubyzqBunKdooNG1DBSnB5ELpZjhkEooyEO7gynGCLOY6xhJvvTkApQbwoqHRL
      +otukm33fyz9uBX8ujDqR4Jwe9GbN6IcmxPyMWxhIEaKtNXrdE3aVPphQ7Xk+dF/JIMXw+2w
      rk6QtyDrVOGLX6G06REOZnYg+8/x+7FTJPOCVNcFPK4uvtQ+xXulLVw09tIckYQ8gnXmGDWX
      /zdSmFzMRfh84yCxirLLUCnF+snv8tPo72OvUH8Ry5QVEf4Qg5ufZ+DMedrDH1+krCclCHsE
      MYbpHutFVTYg9LvfdfUb4wUCELpBoXYDJjYiEGUspfjVcJTDw37+faAeE4sHapLU+CxsRzGQ
      NslLnQfjP8f2RpFN92DUtlAdhMmMQHY+RGeTi7VRyQP6GURyAmcmXLu1XrG/qchDDWn+pH2A
      mHde0AshqAtIDFlcnYGZbsalb3XauiUotlY4HCi0cE40su/8t9HH+z7G/qwcvxErwGLkazZw
      LLYG4qOYTVAx+gZbjSvEfIoXJ9s56dlOQBRIVzahwjW8WvHn4C4TmN28hb8aDUJEQ9S1ceFE
      LzszY5iaRIVr6BtyY1l5/C6YzMK6aoEuylsNxlIKrwtCHsHpUZCV17o/bwVC0/hl+9fw9n+X
      bb70x2IUG5qgPtvLyJr9vFuxBumP3qVO26sh8vm8Wq3CWK+MFPjV2CpJtVWAUhKVnCKQ7ke6
      gxSq1y2+gLqBg3xBO8BU0eQ18xHGmh5YkQtPWUXkaC9aqAJz5DxBj8Z04270iStUpy8TtJPo
      2Sk6vROMFdxMFgz80TAFXDSbCY6zgZGOp1bVXVjV9Sb/XR1Av8PrejlmIrmU1DhUbKJn0++g
      RarvbCeu6RQrcod+YlcApRRrPvweT0UuU+GTJIo6L1zexZSrDq/MMtW8D6HpDDfu52/j7TiV
      UXD7VkaQSqFyabS6NaCbWIG9xNNTCKuAU9vBSG0HIwCOxXnHAX2mkM9MLaDTSiL0JSLAH3G8
      mUQCGVLod1T2llW+y2mD0byGFo7e0Tygj4pPLAMIIcj4aqj0X8LQoMrn8HXPu4ykBHUhjR/2
      JbjY8ixC05AVjcuSjJLy6uJOiTHUWC/N40cYqdqOs+EB1vf8O59ynWGq5OKSauaKrCW+5gGE
      24uSeUhMQKgC4Zo1CjWUkssatrcEpchFmhjKnqA1cPsryM1Gyh2l0AWcTPvpjmwhvXl1V7Vb
      xgq78IllAKUUCUJkS4Kwp/yydE3QGCl//7u+43xrpJrx+t3XuCGVYyOnR9k6cYBaI81rDV8t
      J8IVs2y5+D22RlM4VZLe0jEOZzqpmL5AdTvUCIsNqpvvxUPEXR58E108kXiRFm+a76QfJeOv
      Z3f8ACN2CJ+VJB+sw8Kgr+4B8IUXD+GmIDQN0drJ8Ok3aSXxkdq6HmYJH2C6oDgYD/F8XYLn
      66Y5kLnMoZXqHncJPtFeoPVaPyH3YmkoQMFwzoWcHqa6762rXioApQLBkdMYxTT3hiZQ6WkA
      NLtEUWlEPIrmqOBiqRqUoq1Szb3z4YxOV9X9iGyC3838mO0VaU4WGiimUnxq8Ds8VjXMLv0C
      lWqar0RO8MfRo+zp/wFKfnSprUw3B6MPY9/mjQOWlJyeFhwe1Sl5I/x7qoXvOXt4u+mz/DoR
      P3ySGcAuUV/sA6FQC1KzlBK8NejjYtzga5Un2WsdI9T3PmJqEDE1hHv4LCI9xdcj77MlMMWL
      vVFEVTMqOU7j2Hucjz2A5QiODLmQUsGVk4RMe64g1sliE4QqqJk4QVuoiCMVRwvNmH0nCbod
      QLKuUnE5G6RgSwYTsM09jDl6cVWGLXwBrhRvr0vUEIIaLwxpFeSG+kgUBN01e6Cq+e5Qf24C
      n1gVSCQnuCd0dRqzIzV+MNrBJt8I+ytSoDSGEw7PR18jmJX8ff5xdqUPcsS9k4TPTUeswCty
      A0LX0YsZHuY4VwpeqmNQGy7hH7zI62YdE5aPw5egr24/ydp2AJqKvWgCJnOCvDvKVzdbRGbo
      UghFOBrkr/P3EbYnqIufQ1VmUY6N0D/aK8kMD5FyHJR3tvL06kIIgQIuJATNQQi4XeRLg/RZ
      +TufAboK+MSuAA3J00S8V392YsLHZVcHzd7MzCeSp9dkaIs6hN2S56xf8WBzkY2uMeJWOd2g
      UUwA4FSv5VW5i45Qbs7NuKVO4vJ6OGc30VRlMt2wExmqRhVytOmjAFT4wJ8a4u0RPx6jTJAj
      Sbjcl8A+c5jY8DEeaszy5+6XCPUc/sjjVlaeqJaF20iOmhDsr5OsEVNc8rQRN6LYzq8j+X9S
      GUApZLFAfGYXkEBQtDReCX2abVo3Ue98ASxdKxetdZuKe+stPAY0q2GulGIAtDOAssqxjdG2
      x/mO70uM5XSKFtiORrxkMjxt8Vpp+9zOLuGU8OqzOVEKT2GKzdEMk5ny3uKoT2NHNM7+6im8
      lJBSEfII7su8jUpPfaShV8UCNAcEllN+9jX2zUeAUoquBAzP7C7ZGJF8OXCBVKQVUXn7a4He
      DnwyGUAIhjc+zz+Lz5Eq6CilMZ0TOIEKxiwfp0ZdjKYEI0k5Yx9IFkrM9lCBda5xADbEigRH
      PpxpVmBVt/Pz0g5Ojmj8aGoTeriSpyr72Fw8hbJL5QZ0k6KcrSwh2FOZ4Gi2ngp/WS3xmvD4
      OsX9bYL71ugEPRLbUVweLaG98xO8H/4ckY3f0tAjpUlyjuSvuit5c8RkMf3n8wUy2RyOI7Ed
      B9u2sW0bR0pKlkUun8d2HBzHwbIspFTkcnlsu1xgqi0kOT0F741p5G2FR3doy3VB9vZ5nm4n
      7lg2qG/kAt6RCxRCtQj99h9yJYSg6K9GjfRwymrhtdCzyGg96XAr/VdGKeUKrA07eF2zd2hz
      OrPbkNT5rZla//BWYR12dF7CxbUIY6KS0bbHaep6iW2hSbZU5uma1MhE14KmkZ5OMJ0oUOUu
      0BIsENCLxDwOCDUTFAOEwu8GTRNomiCRlUyNJfhM3TB6cpSRWCdCu7m5SnhqOFKooygFwWKc
      9qB1VZZovpDHcSTFYpFSqUSpWCJfKFAsFrFtC9t2UAqy2SyOI8nmcuUKaoaBoesoBfV+0IXk
      hVwb7a4pgqpIX0ojV7t+5R29w95SpRRIBzIJcLnBtkDTbq8RrJSCkW5ChTifHfkFgznF6PBJ
      Jus6yWlusm333dYTRISm8V7jF8rVlmeeo4o5vlTfS0uoXJ6waCtMXaBd5b2YfzsKqJVjXLEt
      hGGibAtClaTDVaAkGwIpqvyAEIRKkwwrhdANpgiz1u2ie0qwtV7QFl6YIrJgdxdq5jwBeHS9
      zuZ6jVNDiql4L67S61hrd8FNRFZlsAJbOiglOFaspXb6AA9Ulea+97jdFEsWLpeJJkSZ4Gcq
      VOiahpRlr5nX68XQDdxSYtk2+ozQGskJXh72sd6XY6xtF+9NF9hl9tOiEkze3Ou5Y1BWETXW
      h+fcW5CJYzV30jz8ASObn719DKCUxH3pfZ7oe5HNIQuXKWgOCnSRRSX6OZ1x8bIyUNLBb2qk
      1+yAm5R21zzTKqL3HMdZt2fOHbe4koMIVvCj5DOYF07hr6xk0ttI1J5mn3WEzRX5GboXc6uB
      EPBpz1FeODFC37Y/RPafR6tvB68fEFzOR9irxtEE7Pdc4tLUAKqymWztPVSNvUN1SJLMS8Le
      2XmZj7udGBRsrgNTn2e4qqCgowqGEg77rKPUjB7nh8WvIaqaVjwP0fFzfC7zS84Za3hfW8cO
      +zTeGQPc5XLhcs0te6zkhFDPzJkEWUvx1ohBQOaYcFVREgbnYztJX5oiFbpJW+M2S/8520c6
      yCO/IDz4IdujNmN+P6XR41QZBXb2/eT2qEBiaphdR/+RZ7PHqHU7+Gaa10XZBagJRa3bZkfm
      LFvS53ikdBZvzzFUahL39CAZ3Udg6CyW6Z3LwrwetMQo7itHsV1BOgdfIu6tx5YCOXABLXZt
      kdaSGaBejdPu9HKvdQpXdgK7ZFEbtNGvqZ4k8ZmK7bEkRt8pht2tyMrmssXgWOzIvEOrv2wV
      FkoOx4cNZKwJ/BHOaOt471IWq1CkYAtMJGdHYCipUcBAofHTsTY6A3FMfZ7pgh5BviRpjcK7
      vRApTZCIrQfDxY2gbIvOvle4lA/QZKTosAao9rEqm2UMDVqDkvMpF9Ueyf25E6Qck0vRrUxs
      euqm1bXbBqWQJ99AnnsX2XuO6PBpmnySXZESIWGxK5QnqNtMWvrqrwBKKbb0vs7TnqFFGQaC
      xa45v1H+C7DHG2dP4TAyD9NTrxE2HHrGw7xQ9xy5QBUEooiZgxdUMY9KTyMCUTz9x3m49BY9
      CTdm5hTPrY1TTJ6kK7WGyPgpSj6dNenT9Ia3ka0ul+rQcgmecR2nKlruzz1kUSyMxKqr+lq0
      4dI4XEq4Qc+AEHjHLuAa6+JIZA9VEy/TXmEzXXRR1P3Mmb/RGrT7Ps2xTIJ8z084NGFSKpTI
      12/GGRgm6DdJuqK82DvNlzriKFFeCXQN9qzR+aBfUu9XIIfpmx5E1q9Ax3Ys1jDOuiqbH6bb
      6ZvyUOWbpGEVqpVrQhAw4fkWi5CrfB50ZfEc/+JupajdJSElpVDpaYJdZZfyrlCBujqHBp8k
      aIIjHUZziqhbYZXs1V8BeuMZ9vX+nFrj1tKihRD4dIUuBJVaEffQGZ6rPIkzeImRwHqU4cJ9
      5jW2jr+Kd+Q0X6o+Q9hlsaUqx9bKLIYOLdoY8eExOiJFWuwrPFXRyxbrHCMTOTJ4sWON9MfB
      lRlnIm8QdZWukfzZErwxFKY1UMTU4bXLJsPhTRRrN4DbR/2ln/OF2BlOnh7hg+pnGO8b4YHG
      HIFkH1dOnkfVtqFMN8J0I1A8I9/kiaYEhUyeK1ozTtsOCpVtkEuQsXSU0Gj2pGaEhkITGn6X
      oGeyHC3WwxXkoq03jrTqBmdLFTiTw/TV3odHVzzsG0Zfpe2SQoBbLwu6iYLGt1yPk1h75ypC
      XxfFHGqsl6qD/4TbKdDisVjjd1gbVPiMslDrSUNnTBFyCa6k1OoyQNfZk1R++BL7tEFubb7L
      6cJigXd2tACtzQZtoQyhqYuMJKF26B2+0JlnY0UOlw5ht4NrwdGhbkPRWZGjNZCl2ZcDAS4D
      tnkH2Zg7SXwqzXjRQ5+q4UTVE6xNfjAXG1AKziRD/KrQSZfRzvkpF247Q4XHZsCppCANvF2H
      eTh0hTVRCbpBd3AL1cmLbK4q0BiB3lyQDeljuEpp4pHyvuDMxQ/ZVlmgJQYD0w6J9kfw9B7F
      rl2HZfooTIzikXmq/facKuQ1BeNpOJsMkWkvJ8zdiNCEEIhoDf01OynGmqgcOUW7mMBnfDQC
      XRxPGM3Bt33PkGnfd1cQv8rEsd/8ETI5SVNpjK+ttbAdyXhekrUVEVf5VPupItT5wJLQW1rl
      8wH2D/8SJXtucUfSPNHP++YBBAqFJuDeyBRb5M8YbCkXiXKJlSSQzRuYAkGVz+bL3vexnXIh
      2h/0D/CB0URPKc9E0mK8dicFzcWe/CGejaT53nQrP275Y/AGMEa7EFVrKTSt56cj6+m59Ap6
      uAIRiDAZXofgCEIIYl7JmkCeNucYPYUHcSVH2F9d9uuPpMDrKxuVheoNKE1HVLcw6vLw2qkX
      ibgsGsOScsKBTm0YjGGLfCqBVtm88uksZKjr/YA2MU7sI+x3ylqKeAEaAlB0YKxocEI0c6r6
      fqzadXdF+WqlFPLKGSqTvdgJqAhanIsr8g50VsGlacX5hMDQYG2onLiYs6GpcpXdoLaEmxM0
      C6udqUU/Zxlh1nYoX2do0FpxPSfy4vbmf1fMFqUF04APx9yMelpJN25HCK3Mdn1n8WVHODHh
      4HXgqYor/GTsIqW6jThr7i37j+0Skb532L0mz/8Z9OEJjfGY/9zco3dGJqjww38MN2EMX8Q/
      eYmWtrKrMVeCM3VPlnNqpI0IhIlOX+ShzKu8Fmnmh8NVfFl0UxcquyPbqgR/7LqYcygAACAA
      SURBVMnzozMvMpScxFi3AxGI3HBmXWPdNA8cQpgaMsDMQRs3D48Ov0hUsVE5vOnaRmHNVlQw
      dldI/VmoC++j5ZJMRttoSF4mU1KsbxQUHEXUDX5TcDkOWypgVqD6DUim1eoywAetT9M4/i0a
      jPxKu85iw1ixnDtt8efXu26pl3Pt9V63oCHbR3wgQ8i0qS9cQWiCN9JVPNOUY0t9Ofr5F/Zr
      dMePcGJ6A7XOCBnlJVadJ+gT1Itx9hRfpCOSR6ADgvpweVxVfrgYqmRf+mdoWnniW2NQm+lm
      NFKDNuPa3JQ+wuZomsNpQcFTw3FL8Sw9c/2uCmo8v9HmJyfewG/30Lfpi9cW6l2E6qGjmMrC
      VLMjv/lXrZTiSL6Svm2/R2+wAnSjrGLddEu3D0opqG9H1bfTduCvaQpYPFiv8OjgnRlywARb
      XU1bpi7Y4pOrywClho28FN3PV+O/xK0pjJuIcS1P+OVvb4fjuCOSoyPSBXTNfSaVojA5waUJ
      k60zwV+PCZvCSTbx/sxVM0EypYi5LSYysC46f4DdrA1zf2iQvsGDrK2Qc6uPacD2qcP8gn1z
      z+zWWrHjOvGNT+H4ovT2HkTKbnRNm5uVhojg/3rE4OXTfQy8+1Oc7U9eU1Z9FqqQZV9wks5g
      OSovxK25J0sO/Cr2KERr7yqiXwghBBXhIIV3X6bCsKj2MhPzKKvHUpZjoPYibVmhiJduQy7Q
      aNuD/E3gKd5IRyguyopQC/4s/vyjYfHrWdS+gpRtMmm5Kc2Vzpu95urCs5oQbKgTpHPODQ6k
      KKtSz7Sm2NtYWKIP4DE1vtzQTWVA4khF94Qimdc45Hv4KsIdbX+S9zv+E44virIK7LWOkFca
      eaccG1BKUbTLs3T/Wp2mQjfBN/8Bc3KZ0iOGyTG1hoIjbllFV0rxXq6SfN2GW2vgDsGlQemN
      H/FU5ghbgyX8wiGfL5HPWRTyNplMgWymRMRUjCVtUPPxlsG8WF0G8L79PeqP/JDCpoc5nIvw
      H4nKa5KxZjFL9Csj/pW9xYUMphQUpE7SNpmyPRSUgSEUltJI2gsDSnLu7lmsqYD7WuUiT9ZC
      RplnHk2bTaNQM59c3deiJfi7vk28ORjmzYEA3yg8SaZ51xJDFCjb4r7+H7C9IoGiXOcy7QgO
      9yj+13tuBuMOjoKv3afTHpNYiWUyR3WTJi2Bz5hdlVYmYJRSDGTKP89mfLxR9+wNg29KOqhj
      r0FiorwpSDqoUhGVzxI78D3UYNd17/+ocAp57LFeAk6WgWSRCi1HqWRRLFpYloOSikKhSDpv
      419gCAkELb5V3hBznz5KTIwz+N5f4YoU2OaKl8/CWuYFrIz4l79GzRHd0ncpBV7NQUgoKp3S
      zF+/Zt3wGZvqr11VZuXF0j2azR2SjKUUQ1kX99baBD1gKIc3c23I4hhG/ZblDchClvX6EAId
      U0BMdzCEJF7QSG5+lu8PfchjgS6qAtBVqIC1W5buiRAkjAio0XKfV1LmRSlyNhwaNYjW1/Pu
      2s8gwzU3vu/CMZovvEv0ygnOdj5C1ZWTmIkJ6jXFutwUR+LDXPzs/10+Uec2oDjYxc5Ajgm8
      bG2AoKvsbHAcZ+7IqeEMoAwmpCS4wHNY6VllIxhgrZllLVm4I1Xx5pezxcykCfDqDpYUFKSO
      Lso6eMgofeS9IsuZgWLGeVkVEBxNV9LTU6TebxPxWKjcCEP3PDBTK3QeSkrc/Sexow2YqVH6
      Um7aQgUMUfaoKSVojig+sItk1j9M39keTk55Sbc9gHad6OuH9Y+yfaiXNm+Gsrd7eSZQSvH9
      qQYGIxtxNkY417x1RfOgpIM+3E28vgP30AU6PnydBzJjlNDwoNCE4L7UMMW3/43eh/9g1T1H
      SinMwQvsqXLoSyvCc+5ehWFoKBSJkuCH9j0ktz6JaRf4Wt8/0+IqO2lseRu3RE6XyhFdz0dO
      DxHL/D6rkMwGz0AxvwllFrbSMDWJhsKjOZhCLWjm5l6IWqDmzBq180yo5tIpNE3xTN0w4xnB
      wVQrXo/gy20jnEsf4JepMHZF85xUDo+c5Cv6S2gpB8dRVDcIlNJI2hoBXeLWBJvrFScvvMPl
      6Bc50fw87qle9HU7rt/XWD1vT2wmP/ku7VE1l491zXVK8fq4nyttj1K4mXRmQGg6avMDFC4e
      paaYY20phS4EvpnUcoXEoyR6fPzqLMBVgrxyhvXpi+huhVqm6fOFEMn7v4IwTEo9HzJRELTM
      LEa2XGUj+Jwd4QXRycuZGv4+8hwj1rUHP3w0XCu61RzhlVWUWYaYhVd3iBolgnoJl7bQKp/V
      jZdbDhbGKBY+f/558z2QCxiibH9oQuB3Ka5U76VSTeF3S3ZXxPnP+W/jH78w12K4MErQlPTE
      DV657OWl0yCVxKM5SKVmgoCCL3XEuefkN1HeEKWdn77hTAkhiCs/rw55yyrAMuOUCqxigXzw
      1k52V/4Qzvqd2IaJT8yKg5l5UxrDhofufb+z6mnvynHw9n/II9EUSik8ixh8TiMw3WX7Skr2
      Tx1iW2D+qCqvscorwPiD/4mTY0WUY4Njk33nwCp4eOBqN+jVXiQxR6izhH9tdHiWiFbW/lK4
      kSE5H6xTCpJ5eGuymniknWJlNe60AwguTutMlLy05X/JOalh162nL7aD/2eyBpqbEBsjOL2n
      iQ69wt76AoZeVoEQ4DYED7Upzp87BDUtK1q8JmPr+HTTu6yNLN93W0JaDyJ8oRs3uNTIAxFk
      Os6kN0wpm8eFAhyKSuNoUydndzyJqKi7pbaXg3Jswt3v8Sn5ISFD0pUEn/vaCXEkXI5uI6gp
      fGd+waPGFeZ9gGVN4DZkg0rEeB/+xBAxfbGxeS3mpcUCXX4mIaz8/fUZaJ4ZHObVkVmV5Eax
      heu3PNvDWdhKUJIaPn3xrrdZj5bkzLDgw2IDl7Z8HUw3gcETvG9vpC75Pi97niUdq2XT1EEC
      MkNcSYzECBSSOKFtCE1Hb7+XX55KYvUc5NEO6JtWvDIQ4fm1SUIe0IYv4mQT5XMFbgBRUY8+
      7EGo0pLqh1KKybxEem+N+OeeE62m+5k/Y7rnFOsvHEZTiuO7P0OxeSMYq2sMqkwC541/xWVN
      0OvSQTpsqeaqeqgKxVRR44BrB70XL9M0MsCn9XNYuo1jg2FqaFp5M9CqMoA23sfG179La0Bx
      nz4K7hvITWWUI3lCIsTiK1fuvlucNHH9+2eYQ5V/n6cLhS01bARuMXvskFig70PaMXGJ5Q8A
      sRyoicC0fQ/CVbbIsk33kims59sTzZSiTfhSg5xtfK6c2Aa4/H4KdR0gtLmEM33bo1w8MU7b
      9FkawoLmqRz/MLCePd4+POvayK1QWgvD5NXq52iY/P6S6dBKKRK2ydm1T38k/Vx4/ODxk9j6
      MO9vffi26PsAKpeCo7/gPtXHI00Ofl3xYZxrigEPZQTf930K146nKZ76H+w0E+iuAtLlQkqJ
      VSq7Rr1ez+raANrlY/xOcLRM/DNY2mMym/EpZ4h/ZoAL9OjZ65Za65duc/4+scx989eV/007
      xszmdUVJaiScsnUkF1y38J6AZuPRlknAU3BqUONvk08yWX+1n194/JSatrB24h0+lX21zIJW
      EZVNULId6gcPweQgKjGO2XMMgNGNn+afso/wSryVJ9uK3F8xydstXyaDF26ipmihfgMX7Iol
      V8O8rfi+73FUReOK21sRVkj8MjmJKl4/bSYobGqyo9Skh+DVb7Et/SF7qyQBo/yYxRFeS8Jr
      xRYy9zxCUcKWjWvZVKkR8Htxe1x4fW5Ml04w5EN3u1d3Bdgn+pCLJPlSEz9HwEIt0HbEvOqj
      QGP2tL9rD4e+1huz+NuFDLT0KqIJMIUkaZu4hIaDIKyXMLWrN8YsbMvUljeaJ7Pwqr0TsXXf
      sjujeoJbueLdh/KFifW9Q8BKIJB8Pfo+07nDjGcFLRHFd88PMdTxLNrWRzlmW5wYvshm40Nc
      Q2cpbnrgpqSrQPB23dM0DH6HDbHZOSnDY2hUyQKTH0Nim7ItSh8cwLXrCYTbu+x1ZinHlZe+
      S4Vh01wcY0+tjccSZKyZ1G/HIJ0qoesapstA6IJE/VaE6SbnKPrDbYjMKUx9nhYMQ6cgdVK2
      uborgFxi5VtuBUCVDcaLaY0zaZ2i1JBSB1U2ZiV22Z6YNW7VrKF7I8x6ZeR17URbCjLSBCGQ
      CEK6vYj4y20t9PZcD2eKDVhbnrj+tsDKRpQ/CkCy6h4G6/Yx5FlLuqiI+RUbqh18Lvhi6Bhm
      30mgrMbI5k5Odfw+VsM9GH2nbs6fLgSlmg5Oaq1lr5JSKFUeZ95WJMItK29rFSEME3P9ToT/
      +uqcEIL2zi3UyTj7K2ySBQe/34vt2JSsEj4sJouCQrGIYQjilkbcP290Z/1V5Oyr21QKco5B
      tmSvLgO8no7w3rQLqQTLFQqb9ZlLBS9kajlBPSVH8M1eN9+YqKInq6HQriodLpSBQJ+jweWC
      X4vzjBb/vvCPg4ZA4RE2EaOEqV3vcL+lVLN5SAVnzc7rSrLFkL4I0hdGm+pHE/MxBYCIR/Bl
      8SobTnwDRnvKhXOFQFU24azbu+JnzELoOqc3/T7/OlLFa4VGLmVc5bSHnIlVsfLN9qsNvaHt
      GoGh8llUfv5c95QZJL5mJ2nhJql7MYMhhCaJRPxEowGky0Uo6MHv8yLEjC/Q7WU2B0dPji3h
      IqVcA8ktV5cBAuEoVS6bi2lBvHR13sXCn0rBoWIlE65KvhQcZH3QISU8DNds5t/YxIvJCrKW
      IGfrOEpwfsjm4vDsajDf6uL2bwa6tPDbWUKGPZPzszDXR6NUkiy/4lzNeD3TOpP1u2+6DwBW
      02YKznwFu7IXTLAmYvFwbAi8AfSumSxUpVBnDt5StTfhDXBu959xsPM/87NCO/1pxVHZOGes
      3w1Q0qH07ktlN/oMLAU5w8uI5WaqpNHkm43BlP96dIWhSdwzEdeoS/KZrn9GDZzHOv02uVSa
      f+r2MJYXTJc0DmVi/AN7+XbwCfplZJU3xOz+DIdSJVJmkEen3qaS1Nx3C4l0sKhztOEh6gc/
      4FTC5PXQLgodIfTWTgqxWk6kpjmbGkUYLnzD52mavEwmOUldVOB2Cc4NSjY1CkxDXCP1V4p8
      vkQg4COVzCGlRMwUfypZ1kwNHEU6lSUc8WMYizNIyyOaRcrxoEzXTbGhMzGIFqtFGR5GsyYV
      vuKcE2A2ol20wHCKWB27EYCZGGK39R6HU9sgXHXTYxaecoWN6Xuf55tnq1E1DXdNacAyUwv0
      JdQi4fJge0M0+tK4ZhaMogNDOUHKUrQa86unJuBef5JzA4e4tO5ZlG7Q39jBN0YuQU0rtuFF
      BaNo6Sly4z2rHAfQdPq2Po9SisG3T9NopQkZipRVzmvxG2Vf+k9dO8k0b2douJvudQ8iW7dc
      1RERrsAOVwCQrOsgUcrTfvZlPjh/AsOnyE46OLbOjnZxFWPNG8faAo/S0jAMnXyuxGxRKLfH
      RbFoIYSORJQLuM0sz7PFq67GfNs+UZhx/a18qvTKBhRQM/4BHdHZAgJXM1jQA87gJUSsrKZ4
      Rs6yv6XIyfMHyN33e7fuanT7Efc+fgvr5upj9gQelUng9JzG6Fxij7EQGLFaEoVBQKIUdGVN
      TmW8bPSkyCsDt3RmnBRwPqFxMbwBvars3VLZFFo+xb6jP6LRSRPXPPR6XHx2S/Y25QJJyVm9
      nmOBLbTmB0lIxZrSMM8EJzGEotGJMzXeR/b+31tROXDh8nJ52+cZvVjLuvM/Y7qkYY8JugOK
      ttqlVCE1wwRX1/xcCI+3nCDmZf6sLuVyYwpnJnFuFjdeXeqDkt1d3+JU9GFK1R03vL7cWQGO
      zT2547hiS9kWingOnnDe4q3LXmyXj8e193EbgicD5/nJWB9abevKnnWXQkkJhQxqtJfI6EWm
      6zctSw+u1o20DBwFoCvv4Sfr/ghXfJhnci+VCxUY5VXzzXE3hxqeRVuzvfwMpfCc+hXuvtNs
      dSfRDUgj0Gsr0bTsbSqMpWmUmjahatYwXd9JrnYdD4y8QUy3+HmhgeORLYjjr0HTxnIQZQUQ
      QmBVtjCoAljD3XSlNZJxm41NOuYyjpeyzbBy9cgQcsYgXdxO2WNVlDrGNYWzylUoOvwJxuIO
      47HOFXtphKbR691AePoSte7CNQI96lM0RiSxZBcPuc+xJlpO8Z1MSwbHCxSr2ucqUv86YbZO
      p/P+y2iJCZ7oeQnp8jLdsQ8M19K73CLVXCgGiBcFB9s+h1XdSkkYRPuPsS5Ymtu7cUrWMbj1
      czDaA8EoCNBHusnteo7e/j6MXIoW3WbUytNRvcpG8FIQmk5o4jK1eoEfspnzrY9yT88BamOB
      FW3uXgx97WZsT5CIR2fKiHJxYLnKEIqlYgg31fcFiV1FpZFX109tbVUDkE2iUjeukqmKeWQ2
      iTI9HHCW2CCzgHE31ioq/LMBPMWmetglziAnBlY+mLsNjo2TScHFo1RpJWqS/Tx76P9DjPcv
      e0uuYy/Htn+dfLieisMvoqWmmQw2XyU4csKLGO2hfuIMCA2RirNp6BxGKU+F10+9rTiTUlS6
      7blw7G2DUhLv0HkevvRvvMkaLm/9HFlvlLPB9Yzu/fItSS/h8WNtuB/N5aFYKHJmUJHKw40i
      v7fU/0X3uq+TBgFQa6b4w7H/yX9J/jXbL/0z3ukrc+64ayAd5OQQmC5S3lqypZWoXbNMDWur
      QB9anWOV7jRmJby+bsecu3yfL4elm6iK+uveqxwb+6d/Q+j8u6hoNedr95Gy5wVTJpNDBWKM
      rH8cIQQ1l97nvswwj731L+yYuIRHg05DYaXK6vFtYwCVzxC7/A5f7f42B8VaTm36PMoTgEAE
      7b7n0G5B+s9hwx6Sle1YSjCQMTh2yqZ3TM7R2tJ7j8Wiv8tjKcMaBJ7rxgqgMSxZE3Wo8dt8
      prKL30v9H4zJ3iWvVaU8pUP/jkpOopWymFr5aSuDomgBqfG5oNavG4TLg1ZZj+Py0FvQ6M5r
      vO7vvKFNqNJxHkqPcw8OZu9ZcgWHsYLOcNHklWwj/a0PIUIxmKmaIVNTdCsNWUgzYEO3LZAK
      Slm4PHVbskEV7ql+1hz5PoNFg2+1P43VvrPsgitkEd7ARy6iKnQdfdeTqMQwRj7O2biNzy9p
      qb5eu2VX2UIzeTmCW8qteiPiX+rellCRP8n+M+9d7uBk/WdQulnWcTUd4Q3i2vcZtGCUvWM/
      xhWeb2ElWFsl+COth385dQC55dG7pzDtCqEcu7w6egJ05/3s8aT408xhvn+lkcza5Tf7CN1A
      13TO6W70/ovUxUc4U+9hrG4rw9ufu2bfgSEU691qbtXJSMHxkMn2zSaOWuWyKHpmmpqjP2dy
      OsGFtsdwpERJB9PjL3s9ZorbrgaEL4izfi/WmTdI+KrI0b8Cr+Ct7U5Y2g26svtq/Daf8Z1n
      19h5So7GhWyM9+75bwiXB5+T5tH+b7CrZnzJvttK4CiBe0GKhlTMGeoNEbh35CDD7/cw0rgf
      1bjhripYtRyUYxN7/Zs0ZYbIVzRTcFdyxNLYZSZoH/6AE2vuXX4cwQhnPEFsx6JQKjISq6d/
      zxdAKUQ2AR4/rqkrFP3V6OM9RFUvl0IGjQkHvw5pQ+OeDoPaqABWuTp0bqSfRONW7PUxtHAl
      xmzeyW16KXpDG0W3G03oGBM/QKnZOjhLJ88tDbHI+Tj/7+I2rlKNlsn4XSpBTwioDwNIUjI3
      d2NH8Rz31Y8v27OcY2BJDberHCewlSBtu/DpNm7NwdDh2U0Sy+nju6dfoL+qGVboVfu4IOPj
      VPW8Qyw7RkgVkLk451sfZlLm6Rj8GQ/SxdSZV+jvXO7EeYHT0sGe0ZO8Ha5A83gJvvJNpp/8
      U4zkCI8Nvc4WzyiHhysopVI0hUqkcoqu4TyNHi8jtQZ7AhbZ7MypN6s5OHf7VkrjpXnDQohb
      Lsq0Eoh8io7LP+HS9j/jyHGD/kmHz24VBD3LRYfnFaDZ/4sZX8B8EG2pXNJ5D4xAIJUgYbsI
      6qW54MvVT1me4aN6Hgo5lEfQ5d2MVD3LFhIO6DYFoVOSGi5NopTAo9noCyoblJSGIwS/sz7F
      i2e+x5U1zyIq7t4D62Q6zn0jh9lWKXEUfKNyN0bLBrLZNKkhD7VagYaBD+jf8Gh5OyOAUsjp
      UbTUNJXD56iK9xNxCnwucZqo5qCZ8B+v/E9+f6/CMxNEfqJ2EmrL9l46ZXHU9pCPKu6rkeXz
      0Yo2mmatsg1wh5dfVdVCn6sNpCS15yvkD32X6WwRpSC4RF7atfr/fAh9XnJfTb6LN7wn/v/2
      3vw5riu78/zc+5bckJnY940gAe4UJVG7ZFWpSraqXFZVOWxXeMrddnm6p2PCExMzMTP/w8RM
      xERMdExPR4fb7bbbPa52lJdaXCpXl2rRRokSKe4EN+z7lkCub7t3fngJJEAAFCVxSYL4KggB
      mS8z33t5zr3nnvs93+PbGGh8LShpE4tK1dt6mvamcy0/Z0ioOfVdsgNfxDVieAFEtvkWpNDE
      pI+rwyHFkmqD2IZGr9U5x+Lw7d4h/veZ6wRV7ABGex8nzzRzSE1jS0ioIktTw3z18v9He9QH
      BMfMFUbO/ojpg1+iJpVGDl9Anv4ZX8yP4wlNXwSktY7oqDWH0j5Rs9KYcD3iiShd9YpUo0Us
      LhDCJggCDMOoGirIZ4IQAu/E6zBzE9nWR2n/F/jPH2iuz93eCMW6n1tnhMKRQ6w1zqvsBySk
      hwbiho+jKrfvdszT9c+1pTT7O2xEcw8qUsPYyvZjUFgmERr57ZiulQcFlvpsfRnuF9TYIMfl
      Ap6Gk24dM/X92IkErRGoKd+KBlPzrcx7xGZu4F46ScvIWZrmx5kueMSdEoVciexKiULBI593
      KeQ99JLPSi7AKW3OihmGYME1SMYlBU8QaI1tGxjGTugUn6hFHHgWAOvoCzD2IQdbFwmNeDMV
      YjWM2egEGw3qVucJZ4eQPm1JTUmFxTSBkDhKblikfiIEvFp7jemxX7I0u0BHr7/pkNutWTat
      LxA4HtzMxRhZtilG41XB8dkOwjAYjHRwpv0xFvueBSFIfvwG12QD+eIC+8qdNH9YaiLfNoB9
      /SOmrl7ihJMjY0dIyjCjI6VEK43juiiliCSSZEsaIxoQYYuwO1BcnwhIWJqsE1aQ31NdoPsJ
      UY4Vtdb40RT/8f0lDjQHHGqTNKcEeguliApWw6BK5L991ic8rsbwyAcWERHgaUkkpM/d8q7b
      G3HE1Hwr9guMXohaWwVedw5fwQ8X+jnf9XVeyv97LO2x2aWqB7L7IOOd+xFSVkLSdDPG1Ad4
      lsVbhQhWPAF1LbS8/bd0zF3iRKPPtFuD5UIyZrI+dI3pCIuBYK4Ei2OaY/ts4lpvWkD3Nwry
      CLrqBb4XJmZ8/x4owz1ICNMi3tjI43qI67OC8RXJ148GJKPilvDh1rF/vRNsfHYzJEJoDKEx
      BVjb7A5rLcgHFknT29IZkpGtZ6btHOfsUi3nOIBXKGC5WURdKzXBCtNWJzP7niU9cwHp5gm6
      99zm3KsDq7l6rTV6fgK9NM2HA18h33kYpIGIJpCTN3j1Z/+BOsfhnC/oq9Hkw5iw/C7hfbpU
      EtSbimeToD3N+2cDIjVwbMCgLi7WPmc6B3taw9eXSh5CgOt6iGKxqKPRu1MU8cZUiTdnHmwM
      qpUicu4nfCPyNj+5FicVgz94LAeiYuKbA5xVzc/QAVazQtuNyuuf0yiG5hT9LXJDDsBTgnxg
      kjY92IJgtxVudYBVEt6lBZvvx34b34qjpEnz2NtIy2bq0DcQZljd9dzFf81AZIYfD9fhmzFW
      HnudoP7BVXvdCdaaV8tyGezUEI2nfkyp6wBfPfOP1OlwLnM13BCSLILDKWgxK/mWOQ8CrWm1
      BWEJkyanBFcsSbpOIAXklaC/06AlFX7X2WxYiK+U2nkOAIDWGKPneH727zk1HuGQXKQ3Vhmp
      10xMrM8BrVIkyia4zmZXDVOIzS6k0fhKo+sMYhFBX6vANmGlJPjutSasli5ejF6mP138xG24
      rWaAn023ckP08mv2OboTBd6bTvP2kf8F8hmoqUUYFv7Fd/hX0R/RWReKQU2vaP508SV48vPJ
      ndw3zI7RcfldCok6+q5/yOO5mS0P87XmaiA52ChJrQvzL+Sh6GicvMKISdrbDA7UKjIezLqC
      BS156jGDqBU6wGIuvE9NybvcI6xqIAR+9zFGh97lsegkwoMjtashxio2ks8qvMCtjPTWx9bP
      AOFPX3lks3B9QXLTtbmR2s9izwmMulZ+MNvAC9Pv8XRrdvOprjP6W41/PCOhmOOPe04yu6L5
      4bUUN+ueDPky6Sa076KDgL7CRYqmZDyjcH1NpiAIRi8jD7+MiFX3xhiAyi/TOT5I58I0EQ2+
      baK0KreR0hiGxPcDpCHBCEd9DdRIGHVhYSGg3/ERwJBvkG8z+SgrqU9J9rcIzs5pzg8rIrZA
      CMVSVtCR0AzN7FQHIEyRrjT0cXD8JvF1ewLbFdRX4v/wqK2x/fOmFNRamquqltP7fhuZrCN+
      4ZeU2nrJ1h/kvakCJ9Tb3CqRud2s4Adwetyk3s9wfVhwoM/gN2NZ/p+VCNotoT0HfBfDMBg5
      9s8YEWEIYV/9BU6imUOpc1x1suWO9tUNuecIJ9v2EH/3H/ja+XfwC6WwPNV1MU0D1/VIJOIM
      F12sZIREIPnxvCbua1IoOr0AtMZHUNNj8Xz/ajgqyDqQSsJAU4WYGzTAtRlNs71DskDbYT7R
      RtrS7E8q0OXgRcDmzM9WuJ0zbL9QblJZfuPm39BjFrCFz3tnFkkEJeaXVjjnaw53mUihMcXt
      apnDZtndkSJH7IArWQkYxG3oW/qAi9MTiOYeGvUiGcdAHf8NhJDItj785k4Mw+L6/BF0uqWq
      U6LrIaIJYk+9wrXlGY5PD6N1gGFEMAyDSMTG831uRuM8b2nGfEFDHPoTwvF2kAAAIABJREFU
      kDYMzmYkVlaxbBnUmhI3ACE0YyswXYSny3mB1WjQFBpHCVacHZYFuhUy3UhTdC3Q3xC0bMsE
      1dwi03j7rNDqHgGELZP2xH32sLz2Xjq7zHsdL5HOnWYk18jHYwFP147TlSiRNNxb3roitZ4t
      aWRRYcbBRpPJQ0lbRL0sx6xhZGmWG6N5xIGX105R2BEgTAmr9v0PjfGvYjHZSqb/GfYvjJIE
      1g9CpmXxuFJMmgZ7bUXaDBe8cyLKdFsHLcFNGlKCE2nF6SHNZFHwfFKTSkukYK3ofhVCQE7f
      ZTJctcF0cti3cHX02lQQ/r1VsXulhkXcMmNsjdUFdCjGpcu/w6wj+bjmCHXFeb4ZHyOvZ/ir
      zj+htHKR39XvESAxynsUy3kYHfZBhRQIK9AciClyviAhJX8+chC/vo3nUidxg4BMTSPFF75B
      0Njz0Bn67RA2BlwfjobGK4QgEII9EU2tKcptXyWjkWYmX/w2c2/+BU8zwXS9QU2dxp7RSK3w
      5wOuGIL+pnBWFQgQgqOt8IvZuyyLUm2oyc0SMyqbYGshh6gwfCoaO5/UUG5z9mez82xkG8UM
      gezs55Xr/4n2uOLdnE1k9iZdcoQG02E2L7mca2QhL2lcmOalOn/DOUw7Jj8M9jHZ/0V0Yydf
      vvR/MBXfx8Xur0M08VBQn7dFKQ8iTPNi2YAAKUlnF0ixqskUhomKsAFtGsXpUpyxJ75C6/xN
      Xls8R2tpHmtlAfeL/5zJd/49TYV5HuuXRG2NMxKwPwYfTGhWHJPWZEgvzzkKXwlOdn51BzuA
      1jQUpjc0iN6a4rANrXntQUEQKLSWBL6PZZsEfsjMtG1jbXQqlTxiMWvdphpkfBOvtpWiEQWK
      HI3myU7+nJ49kqIn+JvLdewxfCwrwvHURuN3A/gvzV9jaeCltd68P+34DqKh/Y6UNKoZkckr
      fPHG96iliK08Zu16fC3JmzUUR6dYUWCgiQu4GW/gw8e+ROPMEIZb4tpLvwexGhZnOjlycpAe
      WeR33/9T/upL/xtDX/wTRt/4dxTkNIWlgGgBFmOCVlsTr1HETYGUsLcW3lpuwW3o3sEOANh3
      QAq4kyIaFWiUDigUSlAAKWXZ6AW+72OaBkIIYjGL9dttptCgFH65gXZEKiJWkQvOAX4wKTgk
      xvhqcmHdOVRSornAZCm1UbVZNnd/quuvVrjCJOks02C6pCOCPdY84T2bodCmmKqzyXua0Yxm
      qKGN7JEXWTn8AhAOTPUnf0jWjvHTgdf45o03aBUO/Zd+xvUnv07w6/8tP525wYG5N6hJLkBM
      cH1B8bUa1kS1MkU4K/ehY6l7I4tSFRACt5DnRO7iGt9+e77N+sWR2BRaCCEpFR1s28a2baQM
      lYilkFiWgZQCw5CYVoWOKxAkDI01fomn7EUMIVjyTN4sdGIZMb6hL/B4IrdpLZLzJKMlkw/c
      eqYXcojeww93qLMFFJB+55dMTjiohIXtlgh8TSFfQgpJVLnURjTR+hou9X2RUm37hu9Fz4zi
      tvXh7H2ca8ku6qcGeWJlmLpLbzPS0IfqPsx8y0GOlk7REdd01Ek+HNJksprpAlyfFzSLDBNG
      286eAeKlDEZlQL4NyiuC8npgvcFpHe7UJ1NxVhu/gbGBPlF5fOM2myEEL8YWyp8gaLIVf1I3
      BGiEHT66PmQq+IJ/vdhLofMwxsGnEYb1cOzkfkoIIWk1JfOWSbvloJUiCFYHH4hEbX5gH+fi
      4W9ukknUTpGD46cYjRgstPdR6NjP39f+r/S9911eyw5Sc+ov+NXYk8wPPEN3PXz8cUB6SWMi
      ebfzGHnHZEBfZsjvpv3Sj3a2Ayw07GNl6aekTVXuRLPdLLA9W1RrjVKwspzDtMy1XmNBEGDb
      NkoFGIaJlGDZtygdryPXrdUiiAr9DsLzURrOLRtYEvxnXseqslBHKwW+e9eEdGPjV6nXLvNJ
      k2TSQusw+7O6GXnarefS8d8DaRK9/Bb5xj1rMociEiNhCGRQKUQSiRRDX/gjvvfRj2jOTrPc
      eRC05p+GGnhheZSiFeFvD76Kbu5BzY7Q65zntYaLCO5yl8hqg5tuZUynWcuv3xknbYP6shBh
      zG+aJirQCCFxXY8g0Ph+gONUupKXX73FP7Xu3+aTGC0YnMta/Cj1PKrpLndruVuQ4YJfLU6j
      lmY/k0L1KuJTNxAI4pYoh48iJAyKMEVZkFG0Uuj8MqXW/jXjB9Bacbmhn4X2QxveU0uD6f0v
      QC6D29gFTV2M7P8moyJKxHdh9DIIMDr28dFyioQFCWuH7wSLaIJ/7PkGc2f/ihcbfEwRbBtP
      rw9/9IbABEATiVpYlkXgB1iWiWFItFZEImbIbS/vF6yvKtj0Get+Vj4XLq3APAm8nmMb+iJU
      C4SUIMs9zKQRKvp5Liq/jKxr/tTvt9B/guXhU1v09tUUA8HZhhMQiYc6/7fcDyEk88/+dmU9
      kJmja/AtAmA5s8Tw8a8g4uVttFiCM4kWFgvzNOQWmBm6gLH3MTLU4AYZIuYOnwEASl1HmUv1
      YMnw5imlNo1eq6nMDbH/uuOE0Ni2RAiFaUksWyANjWFKLNvANAXGWvSzcRNnIzZXcwkBXTHN
      Qn0fbnN1c/mFEMjaplDRzzRZd9GfDrEaLqfauNG4FycQaC1YdgULjuTPk68y1/tM+fuQ6NwS
      zA6jswvEpi9gTA0SHT9L25W/g5khiCbI1rZxfO4yovsgud5Kl3tZ10z++W9QF7hk+p9CpBpQ
      s2Nk24/yqwmL0k4riNkOw3u/QGH0Jgl5S2HMFoYPZcOUlWKKjbiVJnHr8+up1duvLdavRRoj
      msTKHFVAJL9jCGlATd1ne3F9Kxe+8T+DEHz/g//AcryD6YYBtGkT1Lcjiln2z/6YPcYIrTUu
      dY0By0WDxjaF42mGrxbY3yb5N5lmso1dLO9/jn9s7Nm613FrD+986V+itMaobUQXciAlby7N
      M6hSj4YDFNv3873FF/mDwltIsX5BurkmePvd3a2weaQXaz/VLUfqyktucbjxosSzYuA5UEUd
      Wz4Jn7X7uxACDBOtFGazRcRwSfmz5B2bNucqr6Y+omNPsGF/JBENZ2TTACk1UVvTo8e4aIT7
      AyTrt7x3QkjoGoDx64grp8C00a29mM+8xlys5tFwACEkN7ue48cfX+OEnKE5otZG/1txK8Vh
      lVZb/ouKYW92nvDRT2KZbnSpScfkF00voQ68VFXtiu4HZGaK55smqK+ZAM5T8uD6VEBnQ5ka
      sW4lFjL3NdPzLp11JvMFi5tmpRfDJ9072bEX0g2gAoxU/dra4pFwAABR28wHh36PU/llXp75
      BV8QQxuf36IwZb2S6NYzgVj3s5Le3GoBXGkNW3nsvJvm73t+h6Dr4I7b7ArLHRVii3WCVoqm
      6ff59cg7NKbCMFJriEcknheUmT+rkGv3TgjBwkJAZ4tkoaCpW7pKofkAWNEtPyc8DwVBEK5b
      knWbvsVHxgEARFMXpBp4K5HCuPhvsaNg530OxhUxs2KkW/P0t1sLbG+429UVBxredNo4dfhb
      qIauT8XmVKU8ssrlDwHU/ASytnnLhXLT7Id8p+lNInblMSEE8xlFsRTuu0gpt7x3/X0xLl7P
      c6Rd8OvpQUaG/g1mLMKYbudaw0sEqZa1Y838PI/P/ZB6scJbxovkmw9tmikeLQcQAqIJVCTO
      St9+vtQ8zBs3u1jxZkkVisTdMDTK+hKVNrEDzUE8YhsyPLdim7qCdbPJrV/k1VKMd078S0Qi
      vdVLb38Nn6IV64OEsc1+hvY9ntAfrhl/uD8puTwSgCEZ6IkixdbGDxCLSBL1NudGS6RqJC/t
      KYEo8JzO8LOpJd7Vr6MS9QjTonf2Lb7SNoYQgsOlH3Hu+htcsI+SjzSTq92Hij0ii+BbIYTg
      QuJFnsgN83HjV+kuXuKPDn9AyVVl9WWI2jLs/3tRcMRxMT9hvRcW0pT5PL5gwTNYCCIESpEU
      Hv01QbjzKOCq3fGZjD8894c8c+171Jkr5b4GEoFkLqMJEBzpjeB5Hp7nY9sbm6cEKgyVDClp
      rrc4d6nAa91W+Z4bIOCVtmmOrvw7bi7X87bxIg1yZe07SUYFzXGX3++8Qk3sKtNLbzG68Ag6
      QHjjBaW6Xj4Y7eO4fJePjSeYynxAe91GeRRDCAb225w/6ZM0NItxk27Hp9VeP+oLzqzYXI/1
      ELUtdG6JLn+BH8iDqBd/Jzwkl6F98iOUGeHbSz+hsDCH9pw1Qa+dDu17YJjhPkIxQyqiKLmS
      4amAXDGgrdni6L4ohUIJ1/MwTZNiySnTUIIy+1ZiGAaO45BOp+luMbHNjZwtATQloSW9xBP+
      98u94yrH+AosI0x7t9UL2upzj54D4Lnhl2GYnGn5Jsdmvk9v9hQ/Wd7HH6SuYxobQ5qoLdj3
      dIzlnOZEo8GFyx6N+RKmhGIg+HmhiYuHXiffFmrza9/jdGYGbceRq+FKJMZUw9dAK/7rRxN8
      o/EC/+f10+iDn77r+8MAnVsG3wWnAE2dBIOnMA4+g5WZ4LfUD6hPSs4Pezw2EMcyN2bTjNXU
      6qq0PgIpDaLRCMViMaROSEHBr7wuCBSlkgMCXNclEolgmiZOKUBpRaKsihCzIFsMiNgVDadH
      zgE2LILyGaKFeZ5pXebPrH/Fn4018J3O9zGNstRh+SYlopJE+WUD+yyunPE5In3+brGewVf+
      BBmrqSRKTQsaO7eJYAXLyiIiYV9phKv62cozOygLpNEIrUD56OwSsnUPLR/9OXsjM/g1io/n
      NPV1xgbjB6hJxNd+L5YcLNPENCuLaNtKrv1uGqthZ/i353tIIZHSwPN88vk80WiUUskhEY8D
      mlLJwXBMSmUBXcu6y/0BHjbIpi7OGV/HWXiT58Vf83b7d/jraZ/fa/4Q29p6Y8y2wGi2mJ4M
      yNb3ID9N1xshGOt+nrHB8+z3hhhcnscfPIWoa8UaeOJuXtoDRaX/WwsoRfvkL/nDZzJIGUFr
      yJcUpy7kiViCrhZrS+ePRbcPD7XWmLJi/FJK4rEYhrGuQs8wiMWiRCMR1lhYWqOUxnEdDGmQ
      y+d2Phfok+DW93Ju7x9SIk585hLj6ScYWrx9bD7QY+H1x5GW+6k/T7X08qP6l5nRcUQ8hXnw
      2TB0cgqf9RKqGnLmBt/u+AjbErx9Js/VkRLj0y7PHomRiEou3CjhuJ+u0d9qoqLC1QLbtsKi
      JNPAMCSJRAwpBZZVGeMjkQiWZZZnCkksGtt1AAh5LTOlOIeK7+MbUf5L/I/5aDzJ0mKeUikg
      n3dxXYXvg1NSuG5AQwqkXUOD+pSGKwSzB77EB0d/HywbcfaniNomvMHTaKf4uWjG1QatFP16
      kHg0NLOWepPDeyIc6YuQjBskE5KxWZ9LQw5T8+4dX7shBXV1FhfGAxzvzu+XlBLLNEgma4jH
      YyQS8V0HWMXYwW8xmHiGfeM/RNa38nbzHzK0EMUpueRzRfL5Ivl8mKXI5wq4nqAmUYe6cuqO
      P0NrjS5k0U4BLcORSe1/DhFLIuI1BJPXQ7HYHYLk+Ie83n4VgJlFj8gtbaEF0NZg8viBONIw
      uDTk4Ad3Nht0t0Xo6o7z1qDH6FxY+z06HzC5+Mn3r1x2gBD3eBGslQKn+FDoUwrDJNv9DLnF
      UFHZTzZxNvl1usWPqK2zCXyFaZlopYlFbRazARM5D/vgiTt6f13K03b57ygUfTr1BN1pjw/z
      PczWHkY0dmJ27UctzeIPXcBo7UUk0g/3wth3eTpyjngESo5idsHjSN/G0NKQYBqV2aE+ZXB5
      uERbg0lD2rht7cbItEe+qHnpqTTZQsA7N4rU1Jg0JU1Oj5boqRM0JDeP746rKToVJ7u3i2C3
      hC6sIBYnCSIJZF3LtpyNaoAQAsr9tYoBjKX38vHKHr6cvollV9olaa1prDVJOxbj9uaG39p3
      ic1dpcUdZUUnWOx+CbW8wFTjkwRz4yymjnM9EaHTPMcz/j9ybmiG0YankU0diFgCvbKIWpzG
      7D5wn+/A3YMcPU9czHD2ariJFbM3086lFBvCHssUHN0XY2zG4+qYy0CXvek1uULAzUmPjiaL
      3vbQfBvSJk8dreHqiENbk0Vbk8XIlMv4mENPvaA2USa+Sc3YrMdyoTJL3FMHENE4IhoPZ4KZ
      EfTVDxH9j4Npf/KLHzCEEBBPY8yubObClWXSH5MXGXdfAHsjPaFp6n2+0/BfiVjwD1ebWeQl
      jJawztfsOgiAozXX482MjTXy6+oUzy2e4b3JA4w0PYdINyAjMbQKHroG2Kvwa5pApznYEq6R
      TGPr0dzxNoc8XS0WM4uCj6+WONAbIRYJDXg+47OYVRzeG8W4pbWmZYYURM9XmIagu9VCtViM
      TLoMjTgMtBjkSoq9nTZNdRWzvy9pUCElRtse2uYuUrj+HssHXr4fH/u5IQyDm9FjHMv/gvpE
      sI4lGs4Gx5sWuDL5Bte7v17hxrsl9oobRGwoOJrBmmc38eZVuShDJFK4+1/kB7Pd4YK41gbl
      M3D1L2iUWaxUmrfkr0HP0bXXah2qzlW7WoRoaGdlXGBbt19mbhfmrIZE757N09ZoUHKhsdZk
      oHv7DJ3jKgwZzjRaawwp6OuMELTbXLheJO/b7E1tHFDu6z7A1IEvoU37U7EfHzQm23+NP1/q
      5NnxH7A/vURDclWsL7zRX2s4xwej81xnL52Mk/bnONSwzMyS5hfnwHtyMylMxCqyhvbwh9Q6
      U8z0vAJOnsSlnzDrQWOdIkuSzswZRowIycH3KMbrCLoPIWqbEHYMYVXvTCoMkxmzC7h62+Ni
      EbFtbYZlCp4+EufUxQIvHk8gt2uoXIZpVOQt17+fIQV9HTbTi2qTPP393QizYw+V8UN4I4v1
      e/l5/f/ErzITvDD5DxxNz1CbCFmeiYjPlzom+JKYAGBiXnF5OKBQVCQaulHJhs01Zuu+HKfj
      KDMr7WBaiGgzxRf+kKIQvLswgSyvR6TW5JL1YbbIcxCWjZobQ9a3IaJxHhTU4jQi3Qhahzvg
      66C1xgwKlFwP21pd0G7kUAFoBZ6vsaytJWuitiAelZ9o/MBtjxFC4PsBS0t54vE4hpQo9YjU
      BN8tBLUd/DL1r3hncZyeiY85ZlykPlLiSqGFJivHkaYcy/kArTW1CclJ3YaaGsJQLhgWurln
      EwFOWBFoaF/3QPglynXNroUQoaFBWQIdZF0LwchlzP1P3uOr3h4imkDnMuAWw1qL9fA9zMUR
      ruIRBC77eyxsK9TmrIz4gpqEJlf0qbVkeam1fogOxXNNExRBudp665BqesG7beYok/WRMuQV
      FQrFNc7RrgN8SghpEDT2cKOhmxv+a4hSHt1Ui/Acro19j8Nc5vmDBhMLmtfUGTobziIlrOQV
      f/deHTMn/njr4u1Pi2gizBhtEz7cF5gWLM8hkpuL4+tmT/PqcU3UjuD5mnNXHQqOJh4LyWzl
      7CdCQFszrCrzTS/4jEx5WKbEMgR+oBjoiQCqzNFV65wgdIl8UbGSC+gvrw8qBU3ha5aWfeaX
      FYf7oqBNDMMgCEKW6a4DfEYIIcCKgBUJJ247xsXu32Vl4k0WJi6xsrBEc1qRK8LMkiaSMDnR
      V+KHrgOxz2+0q4XlDxRWBNG6Z8trKRpJhid9QNPeZHKwz2Zizqe/e1VAuAKtNSs5xbUxj5Z6
      g8N7bcZnfQ70hmHV0ori5jWP1kaTxloDyq1pfV9jGgbnrhc5cSiKFgGslbZWwq3xWZ9Dey0M
      w18rtzSlRKN2HeBuQlgRxnpeYyz4MrJhjvjiDTqvvcNvPq2JRwW/GoyGoUzgh6PnNtBag+8B
      usyjl5uzPlqH6WTPCUOHB1BQfzsnLtkNnDnrEI8Kboz7nDhkk80r/EDjuIp4rFL1NbMQMDbt
      cXQgQtSu9BC+OuLS1WoyMesz0GMznwk4d81FqdC441FB0XHpajX48Tt5fv352IYaAQClNJlc
      gCHD+63ZuFO86wB3GUIIMC10XTv5unaGGnsZz36PLtNlWdSHx2xj/FpryC5SN3EKL58jF21C
      23HYexwQIU1C67ChROAj4zWhUtttnOmBIVnH9XwTX2hZIggUgdLYluDiDRetobXRpLXBoFDS
      jM/4PHGoktsPlGZvp83J8yWm5gP2dlpEbEFHs0Vn8/r6gXAPQWtNIgbDEx4DPRszY0JAU61B
      tqBJJTY77K4D3GO46S5+fPMZfu3cP+DICHQGW4YuMr/Ec2N/xT5riplAcDFo5tt7rhG1FH89
      NEvJrqUYb8dZzlC3Msii3YVVWiZ47MsP4Ko+GcK0CZ78LT6Y/Ij//omrxCKClgYDKcIevW+d
      LjK/ZDI5H3B8wAYNv/yoSDwqWM4qSq7iladj+L5mYbkS0mwlL3lj3Odgr83CyqrcTeU5x1XM
      LPo4HhzeazEx69Pdep83wh515Jv6+WDhcV6XZ5n74LvMP/5NpJundvI8ufpe3KY91E1+yBca
      J1nKK1wjRja5h6bUeQD+uwNnAVjMaoIYNA4IBieH+WCynpFq3SkWAqNtD8WWHv5y7Bc8x9uU
      XEVHs0F7k0ldStLRbLC30+T6uM/0vI8UcOJghGw+4L0LLtm8IpNVdLWuznAVCZXV8CtQmmJJ
      MT4d0NJYMWfH1WTzirlMwEtPRDk76DI47NJYK3n/goNpaKQQO7RTfJUievVd2gd/Qkd9SJ04
      k3qCw4sfcsno5F/su0YqEuD4mvNzkr69CWqiwVo3mluhgcl5zd+MP0Zuz4uQ2MxJqhboYo6v
      LPy/PNHn8+YHRfb3WgxP+jxx0CYRrTjwmSsOh/tjuAFcvFokHgGN4Fj/xrCm4gCaa6Me9alw
      3bC4otjXZbGwHDA47NHbbtDaGErXj0z6nL/u8trzYRlmEIRFxLszwH1Esf85bux7huGLv6K9
      OE720Ctcu+zzuvkrkrZAaY1tCGIETM851MQN2pvWaxVtVEtLRBVfNt6lNHWRH3f9j9UrmRJN
      8FbxSazhU/T3WMwsBgQBxCMV43dcRTwqsISiKGw8D7QNtrXZ+YWA5VyA4yryxYB9XSZaw5Vh
      j6KjSCYETx6yiNiVPYPuNoOWhigXrrsc67dDSXbYnQEeFOr8HN7MKLTt5Tdu/l8crF1Z60Xg
      BwErBcg5gkVtUvLg8P4IsehGYzhzscShZkXegQv5dn5lvYJhmfjCQjR2VN3iWGTn+LXi93mu
      fYaPLrsc2WuTiIVGOrvoo4JwnZD3DE5e9Bn129DRFA01AS+3DFGXCBe9c0sBKzmFEJrmeoNE
      TDI27VOTkNSlbs89KjqKq8M+jw1E7kM9gFYPv47NPYJz4V32PvkcS2d/iROUKNguWimElGH3
      GcOgRnjU2hYjboRS0SEWiYYF56s8ItvgwrDHiX6DtpUJvhP8Bc0WXBoK4HKct3p/k0zviaqp
      K9DJJn4Z/TZTIz/hyYZLDI74eLE0U34DnjKxFoepz6U4zZPk9vSjY0mEEExqzfL4G3yr+2Nc
      Dy4Pe7z4WBgWrV5boaSpT2lUANKA+UxAZkWxpyM08ZnFgMyKRmlNJqu4MeHR3mjd4xBIg3YL
      CDtW9ezF+41oMk1x+Aq+W6IYBGgVfjmWkBhWZadSK4VE4ZXLj89c8YigKOZ8mowAW0O2aJAv
      aAY6woWdbcCAnSF587v8g1eiMPDSg73Y9bCiDLa/zmDmWbBXoLlvjfKtO3wQco09u6a0IQSj
      zS/zf19N4li1mP4UzZOn2d9RoVJ3NBvcHHdoSAmKrmAuo+luUpy55KGQNKSgu1mChn3tFqNT
      Ja7cKN3jegAp0bvGvyVW9j1NPvCxlWCvNKiJ22XldFEW6g2NQgAJX4MVjv5NdRJjqsCRhpDl
      eHFOkIwJOpoEo4shnWC5BHktyNmCx7zzvKtfrJpZAMqjdl1L+G/947fZ2RaROF7/i0ggyDTx
      4YpDn3+urCMK0YhEKJ/rEzattR6WlKSTJulkOXekFEqpcFDRiqY6aDfte78IFkKE3VYys8j6
      1nv9cQ8NfC3wlmb5PfdvaW0MWZGC1bEi5PzPZTXXpxSG1uSyLo1PRSmVNNqrcGmSlubqpMJ1
      FJmMojOp6a6DxcDkaB2sOCN8fP09iv3PP7iLvYvQbhFSTZhTc/z0ZImeVsm1sYDGWknEjtDX
      ZbC8Ijl20MbaZN2r4vWaWCKUS7lvBTHiETF+HfjoUgGZuD3hTc+P83rxP5PTkrMjDs0pSVvd
      xvXSQhaiWvN4h2Ao4/PxySz70pq6pkomqLsWlgo+qbTGqBNwC8/GkOBPDqH3bi7Medigs0tQ
      UwtuCbE0RU+n5ECPSXujwehMwGP7bbQWzMzmCDyJIYyw00/5dmmlcd1QetH3fCLRe70GeBRx
      4zQ6u4gaeBqZrN/6GK0ZKJ3hWGsBtKTkRRmf05w56/HKIUG0nPqL29BQG84KHWlBR1qgtMDR
      GguFIcId0bo4bCXTrjScmrR42TjPzZMZ5jufJh9twG/oDikUVRQW3RGiYSGRkRnn+YOazsYw
      y5WuAX8yPCQINK6ncEouuWxo7IYhy6FPGCIWiw6mYbC47O46wF1H7zGk54SpiG2gfZdj+lzY
      b0YrorZEKMXzfYKzI5rjPeFmT3MahscFzTUQkRUSl9bgKINAaGy5sabWUxJTaErKADQv9Cji
      hiIxNc4hNUpxRfDmcCuX+76B19h7b+7BPYD2vTUCoTDMNanK5Vx4/W65bfDVUY/HDiSQKExT
      EgQ6VPPQGinCDFsiEkOjyS0Guw5wtyHs6Cf3+TJM3pzppTZyDUtqJmZ89qYUqZjgWCecG9Uk
      I4Jrc5oTLZu70wgBUSOgFBiUAoOIDNAIHGVgywBHGUSlvyH3cLwtdCDb1LzeOkXpzF/Q0Rzn
      itWPY6VwYnXkWg9X3d7BKtafl9fQwz9NP8mr+kNOD3p0NBt0NBthdYCEeFyCNggCA7maUZKr
      /KGKyc8sevffAR4lWfDtIN0Ckfwc6bji0lWfp7slq0YeswQnegRis7PUAAAQN0lEQVSzWc3s
      DU2qZ/v3iRoBfrnZrhSamBEKRBnl/2/7+QJ+ZyCPbeR5mTkAHB/eu9bNL3r+AOKV3gVhq6Pg
      thma+w0hJNdbXmXlmsPLrWfpbTNxfc31MZeWepNCzgvTyOVMgWWZBIFCCPD9ANu2CAJFInaf
      uUDrm1E/yohMXeaPin/JVFaxtyFs3rAKP9CcH9XURxRNNRC37u792q7zyio+zjfxoTjIdOMx
      /Pqu2x77wBEENHzwp+yLTpBMSAa6LdI1kmLBxXU9kuk4paJLxLZxXA/HcYlG7LIzCG5O3u8Z
      oMpGkgcFp7aTyeU0x9syCLFxYBhdhO6UonEL7vrnwScZ/iqOJ+Y4zhw/mxzirbo/qe49HMNg
      sf4IKTlNLCKYmAu4OenzWL9FPBFFCE2iJooKFLGYTSIRRh6+p/A8n+6O+6wN+lmNfycJxgIQ
      S/LDjn/BYDbFqtLcKpZWAuofnNDDGjqYR3ufn9e1mnm5V9B7niRaV8vRfosj+yzqU4KSq8mX
      fH7xYZEPLpTI5BWGGa4DhNRYEUG8xqI2KR8CcVyt0fnlUF1uB0EnG/hR9CuUvI2jc8SW+HdZ
      H3e70X/rbpghXEw2ieh8FmjNGo/jXsCOcra0f+3PnjaToQmfoQmfZx+L8PgBm9nFrW3n6oj7
      4B1Af5Iasih38M1ldtxMkGs9wkfLjQgh0SocKdvrBR9OCCYymuHFyvVminBtHnx1Z/fA9xT5
      nItWElhdZEuUEjglxe3GEy8QnKx5EXEXJCyFlGtSLvcKCZFf+11KwdF+m6P9NlFbIAVrNcTr
      UXIUOuDBOwB3wBYVNXXlMsKd5QDCMDlV8xKOB8WCj1MKqI0Kju8xcQyTmwswvASX5mBeGBRM
      Sf4OB1PfD/Bcn+VMjkLeYXZmiXzOYWU5j+Nur8XvBILvuU8x2V1FBLpPwBX7SXLbtGkwDMjl
      FaPTPksrAX4QXrdpintPh74tyrHhnW7PfxK14GHFSstRzo+8xT49jO9LCgUHKSSNtsRqkQwu
      Sp4/ZBC1BXPLisySIH3bpF3IdpGGxDTNte4ptm2jtca27bI2/taB0c/y+7h84BsPlSivshMU
      XU1NfKviGcFAr43jKt4761CfltiWoD4tH7ADiM1y2Y8k7Cg/T3+N3uyf0ZA0KORL4fa9KUC4
      NNeYrPaJa0pJJjzBx4uKFIqOFERu+QZXa8Zs2yBiV56srbv9ylpr+Pl0Laf2f/2hMn4d+BzO
      /ZLGPdv1EoCFTECuqDi8x6KzRRIEMDIdMDFXbTvBWpd7yhoVjrgKttbF2UEoNO5lej5OQ7JI
      oiaypm6cSFh4y3pNWlwIQUcjdDQaZPKSS7OKWq3YU0+ZQr11Y787ga/gTMuX0ammu3pt9xqR
      +et8peMaUogtF/VKa3J5xfGByk6yIaG/yyRdUyVZIB0EBLOjBMvz6FIenGL5Cb22RtAq2HGL
      4FUIafCr2q+wXCw7/eq+gDTXuOywMWtTmxAc6ZHMFSoG/1kMfxVag64Oc7hzaE2TP070Nmv1
      7e6IQNBU+wAdQKsgNHZCHX5Z34aMJVC5DGplEZVdCmeDwF9rFLGTQ6b59qf4t9F/zpvzbeRL
      GnRYM1BUFoHeOp9uSAGW5NwMrJQ+/Wfq8n8Q9t21gs/wJp8T2v3sn6lVwDHj8trfYpv/pNg4
      OAgESmk+HnxAbFDteyANtFMEwwLPQcSTYJgYtU2VYyDM/pS/eO17VUvWuhtwWwZ4q7GPj6cv
      8Nryj+mNrVBjgykNtA5Fn5AbqRGP90vyJc3wqOLY5yi5yLmC5VTHJx94l/G5JB21Zmy8gJEr
      YccMtA4p4FpretstUolQVr2p3uTiTY+oLehpC1myF254DHTfh3qArdSL14w41QDlmUDEk+HC
      uNx4WgCqmAv9NvDRkSgYZug0dnTHzgbCMMl1HOfvM808fuHPqWUZIQxYF+asv6eGFKTiAmIa
      19fYW36jt2rzr38mfJ8RrxaVfLjifwyTeFMbj7fdgFs0P0emi1xb0YzNKbSriEWgOQlvXJN0
      tNsc7gvl2u/9DKACtDS2bOuzqnC8qVosVD5CROKhkKxlQ1CWFHwAIrAPAn5tO4VED30rH5Mt
      apKxjfcuUJob05p8SWObAqcEdnqbNwO2coL1YcE1uiBa/d0810MIwZnUF3kyN0ZjzcYNkp5m
      SU8z6JLPM72VSP/GvCbZaqzpDd3zNYAwTPBctH/n2+G6nA0SUoZtgKTBamM68QilTzN2HXEp
      8dYNbqvrgOtTmo40HOsSHGoLG3jfjtpwO6w4giu1d9butdrg1nby3vJtOOO3oK9BkBktMDIV
      UsbvqQNordGeC6b5qbbVhZQbiXMqCGcCrdGlAiq/fA/OtvrgWgna44KpWY1SUCyPIXkHckVN
      TVRgSoGUoTIEem25tA6fPFj8zD2E27r/E4+rRgghOJ9+mcWcza3X6niaW/tuCwEDLYKVOYfp
      hXu8DxA2kbDRvo821p2e1mitQnr0do6xfpSXBvhumBK1owgiayJSOxVaaxLOMrYU5JYUZ0qK
      lAq4kYXuBAgZ1gfL8n2KxASnZyFpwkDDpne75b2h6EHWFcwESS61PhxdO7eDX9fJP40c5vdr
      zm3Q/z912eNg09YDQGci4Nxg4T6pQpi3bleKcGG3utnlOWG9p2ZLoxZCQCS+9lqtFLqYQ+xQ
      egQAWrOnMIyICA5HNUMlzYEW2Jv0MU2DrKu5MiRoa5HUJQQD7WHDifcHfRYLUL9GC9ho/HlP
      cCFTwz9FX8ar7YBYEln7kC1+b4EQggwhtXw9IiY0JTc7wMyyJidMvnDcqI6dYGFFwtj2DkN7
      Ue6xux6rpXtbdSx8OKGxCXACuJqHYy0SpXwsM8wIpSJwwFSMTyjGTEl/p0HchiO9BlfGFHWx
      ik7+6tpgJB/n72peJ3NgABGredi2vW6LkpXC88OGeqtYTYmu7qwLIZjLaqZLgqN7y62SHtD5
      bsLnXthqvbOqzbTG0j4lX9OYkERNjdJiQ2hoGbAnDUopPhjUPHXEIm4LZjOa5RSkY5XRfy4v
      +U+Nf4zf0P3Qtaq9E6zU9LJc0DSsGxczJZjIQCqquTQL6YimqASP9a8OkPcjDXqfsOPWA75L
      fbCCaUPg67WNMKHFppky0BBLhuzGpbymJ6aYWhak16ml3/Tq8eo7d6TxAxCJspSP0kARyq2T
      Ipbg5ryiPiV54oCJHwgsc3WwDe9EVTqADjaKpD6KMDPTtNg+gyuK/iaF0qvpjM2Mn5yrcVcU
      5wY1bkEhTcGBOlmmx5VngVJ+fWuBnYdIgnPeXvrURSDsRxyPCJ7YF8GQYfgTikQItAozZ1Xb
      JXJHhTKfER3zl3CVoq5GE7fUmrLZxkgx3BupjwmejkGmpBnRgiPtq11lwm72vtIMJY/saEat
      EIKLLa9hD47QwCL1CYXyfZQv8ZTCMk0cJ2zQ53keS6Uo0WiVsEF3sRkxP89sUdES37iIC3Gr
      BqjA8WGkAEfaRdnOVzsowslcB4N9r+/8DcRogqtNr3C4R9LeaLG/TVEsOniuT7Ho4Puh5Px8
      TkLMYCa/6wBVizZniqwHUqi13e/V2NVTkhW/spADODetUQXNQn7j+8w6Nm/Vvho29X4EkGs+
      zOWVBmpiUJOMkUzFSNREiMUskqkYdsSgtTHK7IKmJa52HaBa4ZU8hAy7BKhAoJTA88IOKCII
      ML0STikg8MOO6crVHIlrijMBl8YVgYKCb/CGeopS28EHfTn3DcK0eE8+j6/A8wKUCpMIpmUS
      +ArTkCTjkqf3SlI1VbIPsIuNiBuhzqfr+OTyHlIaoDW+74MQWKaJEIIAcJywo3yxKMkZLp3p
      OKVAcWVCcqn+MYb6v7bzQ59bkI82s1IQBIU8kUgEhMDzAnzfxzANtNLkPYMfia/sOkA1QuqA
      FiNPImohIwZ4LkJALB7FkAaGEdYHBIHGMCR5T5GyA6Ll0qioAVcyKS4feeXuaPs8ZJA67Eyf
      SifxPB/bsrBsk2JBU3AFU8sWg4kvM9Hxwq4DVCOy8zPsjeaZ9ASmKYjH4mudY0CWE6EVwy5p
      yVC0lbRYpsEv4WjJjYNff/j4/XcJXm07/3Stn1cab3Kt0M6w6CUj6ojqIrNmB3pPL8KOIKjS
      fYBHHc2L10gaAYGAmAlhRmf7MCYVEextUPxlyx8hBWBaeA1dOzbl/0kQVoSbB/8bbi4vQFPj
      Wgi4svr8umN3HaDKoH2PxxdP4QiwtlSG3no3a5+5RMTPUew8VlbTe7QhhIQ7IPk9egFilSM2
      eo6DTHNlGQ41ho9tdAK9ZeFLwoKmwuT9OcnPAJVfqUpVj10HqDLUF6aotRWW1GttUzdDs17R
      QWk4X0gy2vl81e72rtZ6Vxt2Q6Aqw4LdSOCGRuwFrLVD3QjNlYzBjNHIiplmJN7H9MATyMRt
      i4IfKKqV17XrAFUG0zIItMZFrnWL3Arjuo5fHvsfwpppHp6pvNq6BD0s9+2RweG5Dyn4guYt
      BBoCBWN5E8eH+UjzWtfEhwqeu1Xh8gPD7gxQZSg4HmdyBnvqNgv4F3zBn6Z+h7htkK/vqZpR
      9NPgXvcK+LTYnQGqCNotcXPR5WSxcUuBq5ipaZo8jRcoSNTe/xPcgdidAaoIOr+MZVkMRJex
      t1EoV4ZNUPs5NBB3sQG7M0AVQfse86kuDsYLzOU3Pz9Vspg7+jWC2rb7f3I7FLsOUCXQSqEm
      b+JfO8tkTnF5YePzbgCX/Sao0nz6w4rdEKhaIARaBVja42BaMetVFrhuAH/Gy0wc/eJdaVy3
      iwp2HaBaUMxxcOpd7NqAWhvWiz/OOwaTfc+EYsG7uKvYDYGqBV6JoY7neK5VsugIaqxKrrw1
      FvDlke8Sm7j4AE9wZ2LXAaoFVoz89fOcnNHMOtCZqnw1UsCL9ggtKzce4AnuTOw6QJVAzY9j
      LE3TnwL/lo3SQMNPvAMM7331wZzcDsauA1QLgoCUrRnNKfbUiw2kzsFCDe/u+xbYse1fv4vP
      hF0HqBKIRJKiNikpaFrX8DnnSU5Gj+8ugO8Rdh2gSiDiKYpGjMWS4J3RUM4D4Kf6MEMHfmtL
      nr92iuggCOXiq4hg9jBhNw1aLbCjEE+j3DxzpYqkedJZ3Jb0FsxPEHnv+ximRaHvOOaxl+7n
      Ge8I7DpAtcCKIOM1zC6HXV4+ntB4GqZL86ilGWRdy+bXuA5ufRsil8HoOXD/z3kHYNcBqgRC
      COyjL6DnRyhoj4tFm2Vfsi/mIIpZ2MIBzD2HofcQOvB3SFOQ+4/dNUAVQTR14TbtYSqvieFR
      jNRi6ICeyffRanN9QPgisWv8nwO7DlBFEHYU6/Ev4tY0cnrJpLAwRxAEfFWcpXfoZ2jPueeL
      Xak1CbGNs+1A7DpAlUE2dWD9xh9BUzci8LiSEbw/JTgy8XPSp76Hun4alcvcs89XQlBQYrvG
      8jsOu2uAKoMQEpGsQ7z6z3DHrzJ76SSzvotsOIY8+CzyPjQK1w9hqeVnxa4DVCmEYWL0HMLo
      OYTKLoU9latUWuRhxq4DPASQyboHfQo7FrtDyi4eaew6wC4eafz/xpYfYmBF5EIAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      9vH21yaDAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
